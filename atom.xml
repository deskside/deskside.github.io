<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Deskside</title>
  
  <subtitle>I am Joey by deskside! | 我是桌沿，你好鸭！</subtitle>
  <link href="http://deskside.github.io/atom.xml" rel="self"/>
  
  <link href="http://deskside.github.io/"/>
  <updated>2025-07-23T07:38:51.753Z</updated>
  <id>http://deskside.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你还在找盗版资源吗？进来听听我关于获得图书的 3 点建议</title>
    <link href="http://deskside.github.io/stop-looking-for-pirated-resources-3-tips-for-getting-books/"/>
    <id>http://deskside.github.io/stop-looking-for-pirated-resources-3-tips-for-getting-books/</id>
    <published>2025-07-05T16:00:00.000Z</published>
    <updated>2025-07-23T07:38:51.753Z</updated>
    
    <content type="html"><![CDATA[<p>「什么！这本薄薄的书竟然要卖38元？」</p><p>你偶尔在书店闲逛的时候，产生过这样的想法吗？</p><p>这并不奇怪。一方面，随着国民经济发展，图书作为一种商品，也自然随着通货膨胀而在涨价。另一方面，即便所谓的知识经济发展了很多年，我们似乎还不太习惯为无形的知识付费，我们更喜欢一些有形的产品，比如美食、电子产品、酒店等。</p><p>如果我们想要阅读某本书，最常见的方式不外乎<strong>购买、借阅、找盗版</strong>。让我们先从「找盗版」聊起。</p><h2 id="为什么盗版书在浪费你的时间"><a href="#为什么盗版书在浪费你的时间" class="headerlink" title="为什么盗版书在浪费你的时间"></a>为什么盗版书在浪费你的时间</h2><p>「那我还不如去网上找找（盗版）电子书资源呢……」</p><p>当我们看到实体书定价后，可能很快就会产生这样的想法。</p><p>于是，回到家后，打开电脑开始在网上一通查找，再导入到手机或其他阅读设备上。如果我们立刻就开始阅读的话，可能会发现这些不知来源的电子资源有很多排版或校对错误，影响了阅读体验。没多久，我们可能就会将这本书抛之脑后。</p><p><strong>我强烈不推荐大家阅读盗版图书资源，无论电子还是纸质</strong>。从自身角度出发，盗版书缺少出版社校对，可能存在大量错误，我们可能会因此阅读到并非作者原意的内容。</p><p>从长远角度出发，盗版书破坏了其他作者和潜在作者的创造热情，很可能形成「劣币驱逐良币」的局面。就像如果市场上愿意吃垃圾食品的人越来越多，那做健康食品的商家肯定越来越少。我国的知识产权体系还在逐步完善，日后盗版图书肯定也会越来越少。</p><p><strong>更重要的原因是，另外2种获得图书的方式，不仅经济实惠、保证正版，而且合法合规、体验优良。</strong></p><h2 id="原来买书并不贵"><a href="#原来买书并不贵" class="headerlink" title="原来买书并不贵"></a>原来买书并不贵</h2><p><strong>首先来聊聊买书，我觉得，咱们要有爱国情怀的、长期投资的、高性价比的眼光。</strong></p><p><strong>爱国情怀的眼光很简单——我们首先要意识到，中国的图书价格太便宜了！</strong></p><p>如果你走进香港、美国等地的书店，你可能会被更加夸张的价格震惊到，一本平装书，价格可以达到人民币100元以上，精装书则更加夸张，动辄几百上千元人民币。同样的价格，我们在国内可以买3到4本书。</p><p>也就是说，当我们身处国内，购书价格其实远低于世界上其他发达国家和地区。我们不花一分钱，就获得了三折的折扣。</p><p>我认为毫不夸张地说，这也是知识和教育的平等主义。我们可以通过比较低廉的价格获得大量知识的入口，而无需因此背负高额债务。国内的公办高等教育体系，也不会让学生像大多数美国学生一样背上半辈子的助学贷款。</p><p><img src="03.jpeg"></p><p><strong>长期投资的眼光也很有趣——设置好成长预算，购书成本如果放到一生的长度来看，投资并不算什么。</strong></p><p>现在，当我们外出就餐，动辄人均100元的餐食消费稀松平常。但购书的时候却抠抠搜搜，这实际上是因为我们并没有配置过购书的心理账户。</p><p>餐饮属于消费，而我觉得购书并不是——<strong>购书应该属于一笔针对自己的投资</strong>（当然，买完书要阅读才算真正投资到位啦）。</p><p>我们应该为自我投资设置专门资金，而这其实非常划算。我们可以计算下：</p><p>假设我们按照一本书均价50元计算，假设我们每2周买一本新书，这频率已经相当高了。如此一年，购书26次，年开销1300元。<strong>5年下来的总开销也不过6500元。</strong></p><p>5年的高频率购书，其实也不过是一台iPhone手机的价格。而一台手机的平均使用周期，往往只有2-4年。</p><p>那么，这笔投资占到我们收入又如何呢？</p><p>我们以平均工资计算，2024年，全国城镇非私营单位就业人员年平均工资为124,110元、私营单位就业人员年平均工资为69,476元。假设未来5年工资水平一样，那么5年总收入分别是620,550元和347,380元，**而图书投资的占比不过是1%和1.8%**。</p><p><strong>投资到自己身上的时间、金钱、精力，我们可以将其理解为一次杠杆，以此来撬动我们自己的未来。从长远看来，这绝对是一笔超级划算买卖。</strong></p><p><img src="/stop-looking-for-pirated-resources-3-tips-for-getting-books/04.jpeg"></p><p><strong>高性价比的眼光让人感慨时代红利——购书的本质，是购买了另一个人数年、甚至数十载的辛勤工作成果、思想硕果或科研成就。</strong></p><p>我偏爱科普性质的社会科学类的图书，例如认知科学、心理学、生理学等，这些图书的作者基本都是高校教授，致力于将她或他一生研究领域的成果带给更广泛的人们，期待人们能够从中获益、走向更好的生活。</p><p>即便现在书籍出版量大爆发，我们也应该认识到：写作是一件非常辛苦、需要毅力且需要花费大量时间精力的工作。尤其是一边有研究工作，一边还愿意写大众科普书籍的作者，更值得我们钦佩。</p><p><strong>总的来说，这真的是一场非常划算的买卖，我们花费一顿饭钱，就能买到别人多年的工作成果。</strong></p><p>即便是小说，上面的道理也基本适用。小说的写作也不简单，我们可以仅花不到一张电影票的钱，就能在另一个人创造出来的奇妙平行世界里遨游，这也是一笔极其划算的买卖。</p><p><img src="/stop-looking-for-pirated-resources-3-tips-for-getting-books/01.jpeg"></p><h2 id="原来金山银山就在身边"><a href="#原来金山银山就在身边" class="headerlink" title="原来金山银山就在身边"></a>原来金山银山就在身边</h2><p>除了花费自己的真金白银购书以外，其实，我们身边还有一座座金山银山等待我们去挖掘，那就是<strong>各省、市、区的图书馆。</strong></p><p>常规的图书借阅，我想不必多提。在这里，我想强调的是：<strong>如果你喜欢看漫画，或者孩子正好到了要看绘本的年纪，那绝对是有福了。</strong></p><p>漫画、绘本类图书，有一个令人头疼的点，便是「定价较高」和「阅读太快」之间的矛盾。漫画读起来真的令人很快乐，但是如果自己花大价钱买的没一会儿就读完了，心理上又难免会有落差。</p><p>而现在，很多图书馆里的漫画类藏书很多，尤其是少儿区域的建设，也很完善。如果你没有收藏漫画的需要，只是为了阅读，那么原本动辄上百元的漫画类图书，去图书馆借阅根本不用花一分钱，就能享受到阅读漫画的快乐。</p><p><strong>除此之外，如果相比纸质书，你更喜欢电子书，那么一定不要忘记公立图书馆的资源优势——尤其是深圳图书馆。</strong></p><p>你仅需注册一个免费的深圳图书馆账号，就能享受到包括中国知网、京东读书、喜马拉雅听书等在内的电子图书馆，在深圳以外的任何地址都可以享受到这些图书资源。电脑、手机端都可以访问。</p><p>好好利用起来，绝对真香。</p><p><img src="/stop-looking-for-pirated-resources-3-tips-for-getting-books/02.jpeg"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>最终，我们赚到的钱大概会流向三方面：消费、储蓄、投资。</p><p>消费是最常见的，长期来看也是最不重要的。尤其是当下消费主义盛行的年代，很多消费需要不过是人为创造出来的而已。相比之下，投资往往是最不常见的，长期来看却是最重要的。</p><p><strong>千万不要过度去抠投资在自己身上的金钱、时间、精力。只有让自己不断增值，才能更好地赚钱。当然，别忘了，书买来以后要真的读，才算是一笔有效投资！</strong></p><p>参考文献：</p><ol><li><a href="https://www.stats.gov.cn/zwfwck/sjfb/202505/t20250516_1959826.html">2024年城镇单位就业人员年平均工资情况</a>（ <a href="https://www.stats.gov.cn/zwfwck/sjfb/202505/t20250516_1959826.html">https://www.stats.gov.cn/zwfwck/sjfb/202505/t20250516_1959826.html</a> ）</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;「什么！这本薄薄的书竟然要卖38元？」&lt;/p&gt;
&lt;p&gt;你偶尔在书店闲逛的时候，产生过这样的想法吗？&lt;/p&gt;
&lt;p&gt;这并不奇怪。一方面，随着国民经济发展，图书作为一种商品，也自然随着通货膨胀而在涨价。另一方面，即便所谓的知识经济发展了很多年，我们似乎还不太习惯为无形的知识付费</summary>
      
    
    
    
    <category term="📚杂读日记" scheme="http://deskside.github.io/categories/%F0%9F%93%9A%E6%9D%82%E8%AF%BB%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="阅读" scheme="http://deskside.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>掌握 iPhone 文字提取的绝招</title>
    <link href="http://deskside.github.io/%E6%8E%8C%E6%8F%A1%20iPhone%20%E6%96%87%E5%AD%97%E6%8F%90%E5%8F%96%E7%9A%84%E5%B0%8F%E5%A6%99%E6%8B%9B/"/>
    <id>http://deskside.github.io/%E6%8E%8C%E6%8F%A1%20iPhone%20%E6%96%87%E5%AD%97%E6%8F%90%E5%8F%96%E7%9A%84%E5%B0%8F%E5%A6%99%E6%8B%9B/</id>
    <published>2023-11-15T16:00:00.000Z</published>
    <updated>2023-12-13T06:14:35.016Z</updated>
    
    <content type="html"><![CDATA[<p>简单三步就搞定：</p><p><img src="https://foruda.gitee.com/images/1702437169543515679/2e931260_11147750.jpeg"></p><p><img src="https://foruda.gitee.com/images/1702437328135382744/d26a6166_11147750.jpeg"></p><p><img src="https://foruda.gitee.com/images/1702437352668147888/2c8979b0_11147750.jpeg"></p><p><strong>总结一下：</strong> </p><ol><li>定制你的快捷指令🔧： 在快捷指令APP中创建一个崭新的指令，按照图示的步骤操作。  </li><li>辅助功能设置轻松搞定🎛️： 在”设置-辅助功能-触控-辅助触控-自定义顶层菜单”中，将刚刚设计的快捷指令模块设置为其中之一。  </li><li>点击运行，泰裤辣🚀！在任何界面点击运行你的定制指令，瞬间搞定文字提取，一切都可以轻松复制啦！</li></ol><p><strong>还有！</strong></p><ul><li>📱只要是屏幕上能看到的文字，都可以通过这个方法提取哦！</li><li>🎙直接通过“嘿siri，截屏ocr”也可以用siri调起快捷指令哦</li><li>📲当然也可以在iPad上使用啦，使用方式类似于iPhone</li><li>💻什么，还想在Mac上使用？没问题，在「详细信息 → 在菜单栏中固定」，就可以在Mac的菜单栏里点击使用啦</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;简单三步就搞定：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://foruda.gitee.com/images/1702437169543515679/2e931260_11147750.jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://foruda.gi</summary>
      
    
    
    
    <category term="Digital Thoughts" scheme="http://deskside.github.io/categories/digital-thoughts/"/>
    
    
    <category term="工具" scheme="http://deskside.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="iOS" scheme="http://deskside.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>看不见的罪魁祸首：湿度</title>
    <link href="http://deskside.github.io/humidity/"/>
    <id>http://deskside.github.io/humidity/</id>
    <published>2023-07-31T16:00:00.000Z</published>
    <updated>2023-08-13T07:37:28.552Z</updated>
    
    <content type="html"><![CDATA[<p>暑期伴随着雨季一起到来。沿海地带，好看的天空虽然常见，但突如其来的暴雨也绝非稀客，乌云似乎对白云有着倾慕迷恋之情，要么紧跟其后，要么隔三差五便接踵而来。</p><p>酝酿着要开始写这段文字的时候，窗外正下着倾盆大雨。我试着关闭空调、打开了窗户，细碎的雨滴不停溅射进窗户内，像是雷神和雨神派来打探我在做什么的小差使。</p><p>开窗之前，放在桌面的温湿度计原本显示26.3℃、65%。我戴着一个巨大的头戴式耳机，在更新我博客的设置和内容。</p><p>时间一分一秒跳动，我逐渐感到疲惫和闷热。奇怪，我中午明明睡了午觉、午饭也吃得颇有营养，没理由会在下午两三点还犯困。</p><p>我瞅了一眼温湿度计，20分钟过去，两个数值都跳升了，变成了27.7℃、75%。</p><p>难怪如此！温度的上浮是一方面，湿度或许是影响状态、情绪的更主要的「凶手」。</p><h2 id="要湿度干嘛，温度还不够吗？"><a href="#要湿度干嘛，温度还不够吗？" class="headerlink" title="要湿度干嘛，温度还不够吗？"></a>要湿度干嘛，温度还不够吗？</h2><p>我赶紧打开了空调的除湿模式，关闭了窗户，重新坐下来码字。</p><p>根据维基百科，湿度（Humidity）一般在气象学中指的是空气湿度，它是空气中水蒸气的含量，空气中液态或固态的水不算在湿度中。</p><p>而相对湿度（relative humidity）是指单位体积空气中，实际水蒸气的分压与相同温度和体积下水饱和蒸气压的百分比。也就是绝对湿度与最高湿度之间的比，它的值显示水蒸气的饱和度有多高。</p><p>在医学上，空气湿度与呼吸之间的关系非常紧密，在一定的湿度下氧气比较容易通过肺泡进入血液。因此，湿度过高影响人调节体温的排汗功能，人会感到闷热。气象学上还有一种指标「酷热指数」，是一种综合空气温度和相对湿度的热指标。</p><p>人体通过排出汗液来达到降温的目的，在这个过程里，汗液中的水分得以蒸发，并且从人体带走热量。</p><p>但是，当相对湿度较高时，水分的蒸发率就会降低。这意味着从身体中带走热量的过程变得缓慢，相对处于干燥空气中的情况，人体内就保留了更多的热量。</p><p>基于在已知温度和湿度时的主观描述定义的计量方法，得出的指数可以将一组温度和湿度的组合换算成干燥空气中的一个相对更高的温度值。</p><p>通常而言，湿度45%~55%是让人感觉舒适的，在50%的湿度下感觉最舒适。</p><p><strong>因此，夏日炎炎使人眠，除了太阳高挂温度高以外，夏盹还常常与七八月多雨高湿离不开关系。</strong></p><p>当我们从炎热的户外走进空调冷气充足的商场里，温度湿度同时下降，我们不感到舒服都不可能。</p><h2 id="我们可以改变湿度"><a href="#我们可以改变湿度" class="headerlink" title="我们可以改变湿度"></a>我们可以改变湿度</h2><p>开始重视湿度对自己的影响，也是得益于一个朋友的指点。</p><p>他在家里的时候会长期打开空调，我曾经询问他：这样做岂不是很费电，吹太久空调岂不是对身体也不太好？</p><p>他解答道，他一般开的都是除湿模式，而不是大众常用的制冷模式。而且相对于花钱，他更希望自己在家的时候能是一个比较舒服的状态，而非汗如雨下、闷热烦躁、什么也不想做的状态。</p><p>开始重视温湿度对自己舒适度、精神、情绪以及专注在内的多种状态的影响后，我买了一个温湿度计，这样我就能看到环境中的温湿度是多高，是否太干、太湿。</p><p>在夏天，如果你想要省钱，你可以去逛商场，享受公共区域的免费空调。如果你需要专注做事，你可以带上书籍或电脑去公共图书馆、咖啡厅等有空调的地方专心。</p><p>如果你想要改善自己所处环境中的湿度条件：</p><ul><li>在南方夏天，你可以考虑使用空调的除湿模式，我个人觉得比制冷模式要更加舒适。你还可以考虑除湿机（我并未用过，不知道好不好用，如果你有使用过，欢迎回信告诉我你的心得）</li><li>在北方冬天，你可以考虑使用加湿器。</li><li>在梅雨季节，衣柜里可以考虑放置除湿剂。</li><li>面部和皮肤的保湿也很重要，可以考虑使用润肤或补水相关的产品。</li></ul><p>我们最离不开的「水」，从夏天的冰块到每日的饮用水，我们都不可能遗忘。反而是每天都「撞个满怀」的空气中的水蒸气，是最容易被我们忽略的。</p><p>如果下次，你还感到疲乏困倦，试试看改善湿度，说不定也能像我坐下来安安静静地写完Newsletter一样，做好自己的事。</p><p>那么，下次 2023-8-21 见！<br>桌沿</p><hr><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://www.wikiwand.com/zh-cn/%E6%B9%BF%E5%BA%A6">湿度 - Wikiwand</a></li><li><a href="https://www.wikiwand.com/zh-cn/%E7%9B%B8%E5%B0%8D%E6%BF%95%E5%BA%A6">相对湿度 - Wikiwand</a></li><li><a href="https://www.wikiwand.com/zh-cn/%E9%85%B7%E7%86%B1%E6%8C%87%E6%95%B8">酷热指数 - Wikiwand</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;暑期伴随着雨季一起到来。沿海地带，好看的天空虽然常见，但突如其来的暴雨也绝非稀客，乌云似乎对白云有着倾慕迷恋之情，要么紧跟其后，要么隔三差五便接踵而来。&lt;/p&gt;
&lt;p&gt;酝酿着要开始写这段文字的时候，窗外正下着倾盆大雨。我试着关闭空调、打开了窗户，细碎的雨滴不停溅射进窗户内，</summary>
      
    
    
    
    <category term="Newsletter" scheme="http://deskside.github.io/categories/newsletter/"/>
    
    
    <category term="健康" scheme="http://deskside.github.io/tags/%E5%81%A5%E5%BA%B7/"/>
    
  </entry>
  
  <entry>
    <title>一回头，一拢云，一瞬间</title>
    <link href="http://deskside.github.io/orange-clouds/"/>
    <id>http://deskside.github.io/orange-clouds/</id>
    <published>2023-06-20T16:00:00.000Z</published>
    <updated>2023-08-13T07:36:51.584Z</updated>
    
    <content type="html"><![CDATA[<p>因为老家有老人高寿故去，我傍晚临时赶高铁回老家。</p><p>坐地铁到广州东站，从地下电梯乘坐往上，上行电梯的前方是进站口，位处东面。从负一楼升上来的方向望向天空，一派普通到不能再普通的傍晚昏灰景象，平平无奇。</p><p>我拎着包往前准备进站，习惯性东张西望、左环右探的习惯，让我不经意间回了头，并因此收获了一副令人颇感震撼的景象。</p><p>首先映入眼帘的是一大片橙海，浪漫的光芒明亮又温柔，光晕照在云朵上，像一朵巨大的花绽放开来。广州的地标建筑之一中信大厦伫立在光晕的前面，挡住了一部分视野，但却并不妨碍后面云朵的美丽。</p><p>最好看的应该是云朵，最近广州的天气实在太好，每天的云都像是日漫中的一样。夕阳照得白胖的云朵散发出一圈橙色的柔光，这像是云海的入口，踏上去就能望到后方壮阔如海洋一般的云涛云波。</p><p>当一整片天空都灰蓝茫茫的时候，一侧的光和云像是被人刻意精心安排的艺术作品一样时，这种对比和反差实在是让人感到震撼。</p><p>我站在站前广场，趁着距离检票还有一段时间，站着看了10分钟这个天空。</p><p>真的很壮观。</p><hr><p>虽然在文字中，我总是强调专注当下、定期远离屏幕的重要性，但是写作归写作，行动归行动，我其实也经常无法控制自己沉溺于微信、B站的行为。</p><p>「意识到行为的利弊」和「付诸实践并好好坚持」之间，还是有不小的跨度的。</p><p>本期想分享的是我生活中一个很小的切片，小到在时间长度上，其实只有10分钟，在手机相册里只有6张照片。但是这个切片却能让我感到这趟奔波的旅途有了一些亮点，让平淡的一天起了一些波澜。</p><p>完全沉浸到生活里去，而不受现代社会和科技的影响，其实是不可能的。但是适当的短暂脱离，和专心做某件事，还是很有可能做到的。吸引我们去做并坚持下去的动力，也不应该是拍照打卡的炫耀，而是专心生活、专心做事时「心流」的美好体验。</p><hr><p>希望你能喜欢，那我们下次2023-07-11见。</p><p>桌沿<br>2023-06-21</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为老家有老人高寿故去，我傍晚临时赶高铁回老家。&lt;/p&gt;
&lt;p&gt;坐地铁到广州东站，从地下电梯乘坐往上，上行电梯的前方是进站口，位处东面。从负一楼升上来的方向望向天空，一派普通到不能再普通的傍晚昏灰景象，平平无奇。&lt;/p&gt;
&lt;p&gt;我拎着包往前准备进站，习惯性东张西望、左环右探</summary>
      
    
    
    
    <category term="Newsletter" scheme="http://deskside.github.io/categories/newsletter/"/>
    
    
    <category term="游记" scheme="http://deskside.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>孤独感的浪潮</title>
    <link href="http://deskside.github.io/tide-of-loneliness/"/>
    <id>http://deskside.github.io/tide-of-loneliness/</id>
    <published>2023-05-10T16:00:00.000Z</published>
    <updated>2023-08-14T08:37:52.983Z</updated>
    
    <content type="html"><![CDATA[<p>各位朋友，好久不见。最近还好吗？</p><p>去年年中，我写过一篇 <a href="https://deskside.zhubai.love/posts/2147247902056878080">分享我的故事：孤独感</a> ，意外地获得一些来自其他创作者的共鸣。最近有一些感触和想法，便想继续拓展与「孤独感」的探讨。</p><p>我还是想再次分享文中提及的《也许你该找个人聊聊》里的一段话：</p><blockquote><p>如果你问我，在我一开始行医（心理医生）的时候，来我这儿看病的人都是为了什么而来，我会说他们来是希望减轻焦虑或抑郁，或是解决感情问题。但无论各人的情况有何不同，孤独这个元素似乎是共通的， <strong>每个人都渴望人与人之间强有力的情感交流，却又缺少这种交流。</strong> 这就是一种渴求。虽然人们不会这样表达，但我越深入了解他们的生活，就越能感受到这种渴求，而且我也能在自身的方方面面感受到这种渴求。</p></blockquote><h3 id="潮起潮落"><a href="#潮起潮落" class="headerlink" title="潮起潮落"></a>潮起潮落</h3><p>我最近感觉到的是，这种「孤独感」像是海边的浪潮，潮起潮落，周而复始。</p><ul><li>在我们有所忙碌、与人连结紧密的时候，潮退而远之。</li><li>在我们空闲下来、与人连结疏漏的时候，潮起而近之。</li></ul><p>当然，「孤独感」是一个笼统的词汇。在其影响下，还可能会伴随有独占欲、嫉妒心、自卑、自负、患得患失等情绪。拓展而言，内心逻辑可能是这样的：</p><ul><li>正因为我感到孤独，所以我才强烈地想要独占某人或某物。</li><li>正因为我欲占而不得，所以我才会产生嫉妒心。</li><li>正因为我嫉妒，我便可能产生「凭什么我得不到」的自卑，或「我这么厉害&#x2F;优秀&#x2F;好的人凭什么得不到」的自负。</li><li>正因为我还没得到，我便可能产生患得患失的情绪。</li><li>……</li></ul><p><em>每个人所感受到的具体情绪不太一样，你可以试着去观察情绪，给它（们）命名，看看这些情绪会不会在你的「注视」之下，慢慢消散。</em></p><h3 id="赶潮工具"><a href="#赶潮工具" class="headerlink" title="赶潮工具"></a>赶潮工具</h3><p><em>当我们深陷在某种情绪之中的时候，转移注意力可能是最简单有效的方法。俗称「给自己找事做」。</em></p><p>我之前因为工作中的人际关系焦虑不安的时候，也是强行将自己抽出来、去做别的事情。简单粗暴，但有效。</p><p>当然，转移注意力有效的前提，是足够专注。如果三心二意地做事情，做着A想着BCDEFG，那我们的心情或许在做完后会感觉更糟。</p><p>回想起来，写作是我面对孤独感的重要武器。在感到快乐的时候，我其实不会想到要写作，或往往是感觉「没什么好写的」。但当孤独感汹涌袭来，我便会抓住这把武器，试图和浪潮作对抗。</p><p>很多时候，写完即释然。那些积郁的情绪，那些困扰的问题，那些烦恼的关系，都在写作的过程中被清晰地阐明、具体地呈现。「焦虑的反义词是具体」。</p><p>为什么人需要沟通（或者说，需要学会如何沟通），大抵如此，因为表达和抒发的过程，即使事情未完全解决，我们在心理上也感觉好多了。</p><p>当然，我还有其他赶潮工具，比如「找朋友聊天和玩耍」「逛人多热闹的超市」「在无人的天台发呆」「一个人沿着街头巷尾散步」……</p><p>每个人都有自己面对孤独感的方法，不尽相同，效果因人而异。你也可以探索对你而言趁手的赶潮工具。</p><h3 id="拥抱浪潮"><a href="#拥抱浪潮" class="headerlink" title="拥抱浪潮"></a>拥抱浪潮</h3><blockquote><p>What Doesn’t Kill You Makes You Stronger. ——Friedrich Nietzsche</p></blockquote><p>写到这里，我突然想起了蔡康永的一本书 <a href="https://book.douban.com/subject/2034893/">那些男孩教我的事 (豆瓣) </a> 。</p><p>如果把我们自己比作一个玉石胚子，那么一生之中所遇到的人、事、物，都像是给这个胚子雕刻上了一刀。</p><p>只不过：</p><ul><li>有些我们感受得到，有些则不知不觉。</li><li>有些我们只感到清风拂过、有些却让我们痛不欲生。</li></ul><p>通常，时间会像细沙风化一般，让「自我」这座玉雕在经年累月后慢慢变得温润。有些人可能会变得「圆滑」「世故」，也有些人可能会更显「真诚」「沉稳」。</p><p>「如何与自己相处」应该会是贯穿每个人一生的议题。与其畏惧孤独感的浪潮，视其为洪水猛兽，不如试着在一波又一波的冲刷洗礼下站稳脚跟，拥抱这泛着白色泡沫的、永不停歇的、蓝色浪潮。</p><hr><p>谢谢你的阅读。</p><p>写着写着，我发现我想要表达、急于落笔的内容愈发减少。从积极的方面讲，让我感到忧虑或苦恼的心理症结在逐渐被打开，写作作为一种纾缓我郁结的方式便暂时式微。</p><p>这周三，我也和我的心理咨询师做了一次简单的告别，这可能会是我未来一段时间内最后一次心理咨询了。因为我和心理咨询师都达成了认同，我的大部分自我矛盾已经在之前的心理咨询中被逐渐解开，目前的生活工作环境也十分有利于我的良性发展，每周一次的定期的心理咨询在现阶段已经无法再帮助我更多。</p><p>因此，于我而言，目前更重要的是「执行」，让自己行动起来，改变便会发生。</p><p>当然，Newsletter 不会停更，不过更新周期会再次拉长，以让我能够有足够的思考积淀。下一次，我们 2023-05-31 见面！</p><p>桌沿<br>2023-05-11</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;各位朋友，好久不见。最近还好吗？&lt;/p&gt;
&lt;p&gt;去年年中，我写过一篇 &lt;a href=&quot;https://deskside.zhubai.love/posts/2147247902056878080&quot;&gt;分享我的故事：孤独感&lt;/a&gt; ，意外地获得一些来自其他创作者的共鸣。最近有</summary>
      
    
    
    
    <category term="Newsletter" scheme="http://deskside.github.io/categories/newsletter/"/>
    
    
    <category term="人生" scheme="http://deskside.github.io/tags/%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>从一碗客家腌面想起：选择的自由 vs. 无选择的自由</title>
    <link href="http://deskside.github.io/no-choice-leads-to-freedom/"/>
    <id>http://deskside.github.io/no-choice-leads-to-freedom/</id>
    <published>2023-04-10T16:00:00.000Z</published>
    <updated>2023-08-14T07:59:35.552Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一碗客家腌面"><a href="#一碗客家腌面" class="headerlink" title="一碗客家腌面"></a>一碗客家腌面</h2><p>周末，广州天气清凉而不潮闷，明媚而不暴晒，正是四处闲逛的好时机。无论是走在公园的透亮春意里，还是穿梭在城市的热闹人群中，都是感受春天的好方式。</p><p>周日的我不想再面对屏幕了，扁平的屏幕纵然包含了世间万象，但终究不是立体可感的。</p><p>正是饭点，我独自走进了一家招牌写着客家腌面的小店，不大的店面里摆放着6、7张桌子，都坐满了正在朵颐的客人。</p><p>我坐在店里拐角处一个小小的通道里，同一张桌子上还摆放着一大筐红葱头，店员还没来得及处理。</p><p>我的左侧是小店的厨房，帘幕后面看得到三四个身影在忙碌。我的右侧是小店的后门，外面对着一排绿油油的常青树。</p><p>微风从通道里溜过，在店里打个转，和在帮客人点菜、上菜的店员撞个满怀，便从大门坦荡荡地出去了。</p><p>我的客家腌面和三及第汤端上来了，这家店可以更改面的种类和汤内蔬菜，我换成了从未听过的客家腌老鼠粄，一种细长、两端尖细的主食，和我最爱的苦瓜。</p><p>我刚想要<strong>充分地享受</strong>面前的这一顿美食，我却突然感觉到了两种想法在我的脑袋中涌现，并争夺我的控制权：</p><ul><li>我想要娱乐，想要看视频，想要在吃饭的时候还能观赏有趣的视频，还有好多剧想看呢。</li><li>我想要全身心享受这顿美食，想要慢慢吃饭，而不是没有知觉、囫囵吞枣地吃完这顿饭。也是贯彻我 <a href="https://deskside.zhubai.love/posts/2246161679442681856">№33 写给热爱干饭的你：慢慢吃饭，好好生活</a> 的理念。</li></ul><p>一方面是感性上对「娱乐、放松、高强度刺激」的本能向往，一方面是理性上对「觉知、专注、投入」的高度认可和期待实践，这两种「选择」是冲突的，也让我产生了纠结和焦虑。</p><h2 id="不要选择，反而自由"><a href="#不要选择，反而自由" class="headerlink" title="不要选择，反而自由"></a>不要选择，反而自由</h2><p>我的行动是：打开了iPhone里的「停用时间」功能，该功能会阻止我进入任何除电话和短信以外的 App ，类似于读书时期安卓手机上的「学霸模式」。</p><p>【图片】</p><p>我相当于抹除了一个选项。让我从「二选一」变成了「一选一」。既然玩手机不再可行，那我就<strong>只能</strong>好好吃饭了。</p><p>事实证明，那天我非常享受那一顿饭。初春的清凉，穿堂的微风，喜欢的食物，生活的气息，热闹的人烟，这些只有在不看手机的时候才会注意到。</p><p>在看手机时，注意力就像是定向聚焦一样，世界上只存在「我 - 手机」一对一的关系。</p><p>只有当目光从那一方屏幕中脱离开来，注意力才会播撒在周遭环境中，生活中四处流淌的细节才会浮现。正如我在 <a href="https://sspai.com/post/78156">新的一年，好好走路</a> 聊到的一样。</p><p>至此，你或许会想到：我想聊的话题是「自由」。</p><p>大部分语境下，自由是指「我们主观上有没有多种选择」，具体而言：</p><ul><li>有选择的时候，我们感到自由。</li><li>无选择的时候，我们感到不自由。</li></ul><p>但其实，有没有别的可能：</p><ul><li>有选择的时候，我们感到不自由。</li><li>无选择的时候，我们反而感到自由。</li></ul><p>一方面，选项太多的时候，「决策」本身就会消磨我们的时间和精力，反而<strong>让行动更难以发生</strong>。</p><p>试想一下，当我们想要买一件衣服，打开购物软件，数以千计的琳琅满目、各种牌子、各种款式的商品图霎时出现，这会不会给你很大的挑选压力？</p><p>即使你很喜欢挑选购物的过程，你会不会发现浪费了很多时间在挑选、筛选上，而让很多更重要的事情被耽搁了？</p><p>另一方面，一日之内，我们的意志力总量是有限的，而任何一次选择都会消耗部分意志力。意志力下降至低水平后，我们可能会<strong>更容易感到疲惫、沮丧、情绪低落</strong>。</p><p>因此，思考午饭吃什么这种世纪难题，自然也会让我们消耗很多能量。这也是一天繁忙之后，晚上总是容易「网抑云」的原因吧。</p><p>商业上也有很多避免「人在不停选择」的设计，比如 SOP（标准工作流程），告诉了员工在什么时候、什么地点需要做什么。员工无需思考，只需要照做即可。这样可以最大程度减少人为因素造成的麻烦。</p><h2 id="我们可以做什么"><a href="#我们可以做什么" class="headerlink" title="我们可以做什么"></a>我们可以做什么</h2><p>曾经的我很喜欢折腾各种软件、工具、产品，将手机、电脑的「效率工具」设计得非常复杂。</p><p>我在无穷无尽的可能性中遨游，却发现自己迷失在了汪洋大海中。探索的过程固然有趣，但是行动却始终没有站稳脚跟、落地生根。</p><p>主动让生活减少选择，未尝不是一种选择。「给生活做减法」，或者我称之为「减少生活的摩擦」，即事先将一些选择做好，不让自己纠结或思量太久，反而会让我们的生活变得更轻松。</p><ul><li>晚饭吃什么：与其每天都在快餐&#x2F;大餐&#x2F;做饭&#x2F;蹭饭中纠结，不如规定自己周一到周四必须在家做饭，周末再思考。</li><li>与其纠结每顿饭要看什么剧（或者要不要看剧），不如每次吃饭的时候把手机放在远处，根本就不看手机。</li><li>与其每天纠结要不要去运动，不如就规定自己每天吃饱饭后都要穿上运动服，下楼散步。</li><li>……</li></ul><hr><p>大家喜欢这种形式「故事引入 &gt; 抽象模型和我的理解 &gt; 具体有什么应用」吗？</p><p>欢迎你回复邮件，与我聊一聊。</p><p>那么，下次 2023-04-21 见 👋 。</p><p>桌沿<br>2023-04-11</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一碗客家腌面&quot;&gt;&lt;a href=&quot;#一碗客家腌面&quot; class=&quot;headerlink&quot; title=&quot;一碗客家腌面&quot;&gt;&lt;/a&gt;一碗客家腌面&lt;/h2&gt;&lt;p&gt;周末，广州天气清凉而不潮闷，明媚而不暴晒，正是四处闲逛的好时机。无论是走在公园的透亮春意里，还是穿梭在城市的</summary>
      
    
    
    
    <category term="Newsletter" scheme="http://deskside.github.io/categories/newsletter/"/>
    
    
    <category term="人生" scheme="http://deskside.github.io/tags/%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>8次心理咨询后，我的8点想法</title>
    <link href="http://deskside.github.io/8-thoughts-after-8-counsels/"/>
    <id>http://deskside.github.io/8-thoughts-after-8-counsels/</id>
    <published>2023-03-20T16:00:00.000Z</published>
    <updated>2025-07-23T06:44:08.641Z</updated>
    
    <content type="html"><![CDATA[<p>我很喜欢心理咨询。</p><p>自2022年12月28日起，我按照大约每周一次的频率，参与心理咨询。至今已参加8次。于我而言，我感觉到我的心理咨询是有效的，我能感觉到自我的逐渐开放，我很喜欢与老师沟通和交流的过程。</p><p>正好趁着写作 Newsletter，梳理一下自己自己的心得体会。</p><p>读前提示：不是任何人都适用于我的情况，每个人的成长轨迹和心路历程都不尽相同，我也并非专业的心理咨询师，在此分享的心得与体会可能充满了主观性，仅供参考。</p><p>不过，值得一提的是，正是这种「主观性」，构成了我们每一个独立的个体。</p><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><h3 id="付费还是免费"><a href="#付费还是免费" class="headerlink" title="付费还是免费"></a>付费还是免费</h3><p>心理咨询，价格一定是绕不开的首要话题。</p><p>很多鼓励大家去心理咨询的文章会对价格避而不谈，但价格可能才是阻碍大众参加心理咨询的主要原因。</p><p>市面上的心理咨询的确价格不菲，而且我们很难像大众点评上的餐馆评分一样，获悉对某位咨询师的具体评价。因此，</p><p>我想，最重要的是：价格会对我们心理上感受到的咨询效果有所影响。</p><p>如果费用高昂，那我们很可能会纠结于性价比的问题——这次心理咨询怎么好像没什么效果？我怎么没什么感觉？这个咨询师靠谱吗？我会不会亏了？</p><p>这些关于价格的考虑无可厚非。我们并非亿万富豪，赚钱不易，这种思量不无道理。不过对性价比的考量有可能会喧宾夺主，给我们与咨询师探讨的议题蒙上了疑虑的面纱。</p><p>从理性的角度劝导自己：心理咨询并非即用即好的灵丹妙药，<strong>我所理解的心理咨询，需要一个较长的周期来让效果浮现。每一次与咨询师沟通的过程和结果，都会像流水一般淌入我们的日常生活中去。</strong></p><p>就我而言，我比较幸运。我参加的是单位与专业心理咨询机构签约的心理咨询，因此不必为心理咨询付费。这算是一个非常大的福利了。</p><p>如果你是在校学生，可以考虑前往学校的心理咨询室。不过学校的心理咨询室可能存在保密不严的问题，心理咨询师有可能未经许可，将学生的心思和隐私直接告诉家长和老师。这种情况需要学生自行斟酌。</p><p>其他渠道，你可以考虑医院挂号、社会心理咨询机构、公益项目等方式。</p><h3 id="心理咨询，线上还是线下"><a href="#心理咨询，线上还是线下" class="headerlink" title="心理咨询，线上还是线下"></a>心理咨询，线上还是线下</h3><p><strong>一个暴论：线上心理咨询有效，但远不如面对面。</strong></p><p>受疫情封控影响，很长一段时间都不支持线下咨询。因此，到目前为止的8次心理咨询中，前7次都是通过腾讯会议与咨询师沟通。而我认为「从量变到质变」的那一次，恰恰发生在面对面的第8次。</p><p>我非常认可和喜爱面对面对谈的价值，无论是和家人朋友聊天、和同事沟通，还是和咨询师探讨，我都认为线下面对面是无可替代的。</p><p><strong>面对面的奥秘之处在于：无数的细节能被观察到。</strong></p><p>一个热知识：我们的双眼是采集细节的超级镜头。光是扫一眼，我们就能捕捉到环境中的无数细节。</p><p>在心理咨询中，情绪是一个很重要的细节，心理咨询师需要观察我们的神情、举止和微表情，进而引导我们去关注和探讨更核心、更深入的议题。我们也同样需要这些来构筑一个安心的沟通环境。</p><p>但线上视频会让很多细节变得模糊或看不到。两人的沟通依然存在，只是很多细节丢失了。这样子，效果必然打折扣。</p><p>因此，如有可能，请尽量选择面对面的心理咨询。</p><h3 id="一个陌生又安全的人"><a href="#一个陌生又安全的人" class="headerlink" title="一个陌生又安全的人"></a>一个陌生又安全的人</h3><p>心理咨询师是一个很「奇怪」的人。</p><p>一个遥远又熟悉、陌生又安全的人。</p><p>在面对心理咨询师的时候，我们需要「掏心掏肺」。那些可能甚至都不会和最亲密的人说的话，我们却需要和他或她说。</p><p>（如果运气好，能够遇到与自己的气质和性格匹配的咨询师，沟通会顺畅很多。如果没遇到，也可以大胆提出更换，经过专业训练的咨询师应该都会理解并配合。）</p><p>你和心理咨询师一定是萍水相逢，你这辈子都没见过这个人。你却要在第一次、第二次见面的时候就讲出这么隐私的话语。</p><p>这是有难度的，但其实也是简单的。</p><p>正是因为他或她是遥远的，我们不会感觉利益牵连，才能放心说出来。说得越多，熟悉感越强。</p><p>正是因为他或她是陌生的，我们信赖的其能力、缘分和证书。同时，我们需要一个安全的环境（幽静的咨询室），也需要安全的氛围（不受指责、没有他人），还需要安全的对象（不会随意泄密的人）。</p><p>这是心理咨询给我的奇妙的感觉。</p><h2 id="聊天之中"><a href="#聊天之中" class="headerlink" title="聊天之中"></a>聊天之中</h2><h3 id="一定会感到不舒服"><a href="#一定会感到不舒服" class="headerlink" title="一定会感到不舒服"></a>一定会感到不舒服</h3><p>就像「打破舒适圈」一样，向内探索、打破「舒适的思维模式」的时候，我们一定会有不舒服感。</p><p>我们都有惯常的思维模式：「一发生……我就这么想……并这么做……」。这些往往是隐而不知的观念在作祟，让我们感到痛苦，或情绪的起起伏伏。</p><p>问题就在于：这些观念让我们痛苦，但也让我们感到舒服。</p><p>太过于习惯成自然的观念，就像是一个稳定运行多年的自动化机器。即使机器效率低、嘎吱嘎吱响（换言之：让我们感到痛苦），但是能够运行。</p><p>相比之下，拆掉它、重新尝试建立新的机器（换言之：让我们感觉良好），是一个费神又费力的事情。人是高度依赖熟悉感的生物，向外打破舒适圈有多难，向内打破惯常的思维模式只会更难。</p><p><strong>但恰恰是这种不舒服，能够最终帮助我们构筑新的思维模式，打破以前的行为模式，并且去试着探索成为更好的自己。</strong></p><p>如果你正在或准备参加心理咨询，强烈建议你在咨询时专注于沟通、不要拿纸笔，但是在每次结束后，记录一下日志。我们的记忆并不靠谱，所有在咨询途中让我们感到不适或有所进步的细节都可以记录一下来。</p><h3 id="抱抱自己"><a href="#抱抱自己" class="headerlink" title="抱抱自己"></a>抱抱自己</h3><p>在和心理咨询师聊到童年的自己时，老师带着我做了一个简单的动作。</p><p><strong>用双手轻轻环抱住自己，左手放在右臂，右手放在左臂。然后，轻轻地用手拍拍自己。</strong></p><p>我们可以想象现在是「童年的自己」，也可以就做「自己」。在任何感到不安的、孤独的、恐惧的时刻，我们都可以试着做一下这个动作。</p><p>无论如何，抱抱自己，给自己一点肢体上的互动和宽慰，并告诉自己——</p><h3 id="你可以去表达，你值得被听见"><a href="#你可以去表达，你值得被听见" class="headerlink" title="你可以去表达，你值得被听见"></a>你可以去表达，你值得被听见</h3><p>这句话在老师温柔地说出来时，是很触动我的。</p><p>我总是将自己藏得很深（恋人、家人和朋友都看不出来），我将最深处的自己埋藏在心底，从不与人分享。</p><p>即使我经常会写东西，也有很多朋友关注着我。但我从未意识到「表达与被听见」是一件值得的事。</p><p>对于心思敏感的人来说，自己往往正是被自己所「嫌弃」的人。自己的心声也因此被藏匿在深处。直到有人告诉自己这句话，我才醒悟过来。</p><p>无论你是谁，身在何方，有何经历，都一样：你可以去表达，也值得被听见。</p><p>你不必像我一样选择公开写作的方式，寻找一个让你感到安全和亲近的人也很好，哪怕只是写成自己的日记，也很不错。只要让你觉得舒适和安全的表达，都很棒。</p><h2 id="聊天之后"><a href="#聊天之后" class="headerlink" title="聊天之后"></a>聊天之后</h2><h3 id="不需要勇气，只需要行动"><a href="#不需要勇气，只需要行动" class="headerlink" title="不需要勇气，只需要行动"></a>不需要勇气，只需要行动</h3><p>感到不舒服怎么办？</p><p>（注：不是疾病或身体上的不舒服，而是心理上感到不舒服）</p><p>这种不舒服的感觉，有点像是有人让我们自己举着聚光灯，照亮自己的内心至深处，那些我们刻意隐藏或逃避的角落。</p><p>我在经历的时候，感到了一种「被迫」和「羞耻」的感觉，我也将这种感觉拿出来与老师分享和探讨。同时，老师也提示我，如果我感到节奏太快、想要暂缓这个探讨，也没问题，直接告诉她就好了。</p><p>但我「毅然决然」选择了继续，我觉得既然都已经坐在这里，我又感到安全，那不妨就把自己剖开来，观察一下那些连我自己都不熟悉的内心深处。</p><p>这一点启发，来自于炜晨的 Newsletter。我也拿出来和咨询师探讨，她也非常认可。那就是——</p><p>我们不需要勇气，只需要行动。</p><p>过往的我，做事之前总是在酝酿勇气，等着「勇气积蓄」。我总是想着，我要等待某个时机、积累足够的勇气、学习足够多的方法，才能去做某件事。</p><p>可事实上，就像我们不存在游戏中的「血条」一样，我们也不存在一个「勇气值」，没有充值方式，也没有攻略指南。</p><p><strong>我们不需要勇气，想做的事，直接去做就好了。</strong></p><p>同样，我们也不需要一个完整的方法论或体系才能行动。只要行动起来，自然而然就会形成属于我们自己的方法。</p><h3 id="将探照灯打向珍珠故事，构筑一个「更好的自己」"><a href="#将探照灯打向珍珠故事，构筑一个「更好的自己」" class="headerlink" title="将探照灯打向珍珠故事，构筑一个「更好的自己」"></a>将探照灯打向珍珠故事，构筑一个「更好的自己」</h3><p>在我之前和老师的叙述中，我所陈述的「有关我自己的故事」，描绘出了一个容易有负面情绪、小心翼翼、脆弱不安、一无所成的人。</p><p>而在最近一次咨询中，机缘巧合下，我讲述了初一通过背文章的方式学习英语「逆天改命」的经历后。老师在等我讲完后，告诉我我刚刚整个人的神情和姿态和之前完全不一样，我整个人在讲述这段经历的时候，是「放光」的、自信的。</p><p>在老师的引导和鼓励下，我又努力想到了另外两个可以被我归类为「逆天改命」的经历：高一参加辩论赛前自己去誊写古文，让自己静下心来；以及2020年成功瘦下来，并爱上健身。</p><p>听完之后，老师表达了非常大的夸奖，并且表示她一般不会夸奖来访者，以避免来访者产生错误的情绪导向。她非常欣赏和赞同我在这三件故事中，所做的行动——能够促使改变发生并持续。</p><p>紧接着，聊到了视角问题，老师说我之前的关注点总是自己过往一些负面的经历，并让我试想一下：</p><p><strong>如果单独把我今天给她讲的这3个故事拎出来向别人介绍我，那别人对我的了解和评价会是如何呢？</strong></p><p>这让我有一种醍醐灌顶的感觉。这三个故事，如果不是老师今天在不停地提问、不停地让我探索，我可能都很难想起来。这三个故事就像是放在角落被尘封的三颗珍珠。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>10天之约恍惚便过，直到昨晚我才如梦初醒DDL的到来。本来以为时间紧，只能写出1000字左右，最后发现想说的很多，删删减减还是有3000字。中间可能有很多细节未及详叙，请见谅。</p><p>在中国，心理咨询早已褪去了神秘面纱。但真正愿意尝试或参与的人，和国民数量依然不成比例。我很鼓励你在经济和时间允许的情况下，尝试心理咨询。</p><p>不过退一步讲，其实我们也并不需要参加心理咨询才能找到人生的破局之路。我们依然有很多途径可以打开心路，探索人生。篇幅有限，后续再论。</p><p>希望你能喜欢今天的文章。下次见面是3月31日，祝好！</p><p>桌沿<br>2023年3月21日</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我很喜欢心理咨询。&lt;/p&gt;
&lt;p&gt;自2022年12月28日起，我按照大约每周一次的频率，参与心理咨询。至今已参加8次。于我而言，我感觉到我的心理咨询是有效的，我能感觉到自我的逐渐开放，我很喜欢与老师沟通和交流的过程。&lt;/p&gt;
&lt;p&gt;正好趁着写作 Newsletter，梳理一</summary>
      
    
    
    
    <category term="Newsletter" scheme="http://deskside.github.io/categories/newsletter/"/>
    
    
    <category term="自己" scheme="http://deskside.github.io/tags/%E8%87%AA%E5%B7%B1/"/>
    
  </entry>
  
  <entry>
    <title>纷纷文字落纸上</title>
    <link href="http://deskside.github.io/print-out-posts/"/>
    <id>http://deskside.github.io/print-out-posts/</id>
    <published>2023-03-20T16:00:00.000Z</published>
    <updated>2023-08-13T07:37:32.121Z</updated>
    
    <content type="html"><![CDATA[<p>本以为10天之期很遥远，一眨眼又到了。</p><p>春夏之交，清明时节，纷雨不断，连寒不绝。季节交替，我似乎一不小心没注意好保暖，有些轻微的感冒😷，请大家一定要注意保暖防寒。</p><p>这周是一次短更新，聊一聊有关阅读的方式：打印出来阅读。</p><hr><p>其实之前想作为一篇长文写一写有关「把文章打印出来阅读」的好处。但其实可能没有必要絮叨太多。</p><p>打印文章来阅读的好处，当然就是可以白嫖公司的打印机和A4纸啦（？）。</p><p>首先，打印出来后，一下子就能清晰、直观地发现：自己究竟在互联网上读了多少垃圾。手机上可能一划就过去了，之后也记不得，但是打印出来变成A4纸垒在桌头，文字的厚度和份量就非常明显了。</p><p>我大概打印了40多篇文章，而且我在打印的时候基本挑选的都是一些编辑精选或获奖的文章。即便如此，让我觉得言之无物或又臭又长的文章，垒起来仍然有厚厚的一摞。它们以非常直观且真实的厚度，告诉自己读了多少优质文章、中庸文章和垃圾文章。</p><p>这些阅读积累得愈厚，我就愈发意识到「阅读不是目的，实践才是」。坐在桌前埋头苦读这么多文章，不如去实践，或去创造。</p><p>试想一下，如果视频也能以某种形式具象化，我们也一定会震惊于自己究竟看了多少垃圾玩意。</p><p>其次，阅读纸质内容真的比数字内容要印象深刻很多，此外，阅读过程拿支笔写写画画的过程很解压，也能帮助记忆。</p><p>曾经有人探讨认为，之所以手写笔记比数字笔记要更能帮助记忆固化和建立连接，是因为手写的速度和思考的速度一致，而复制粘贴或打字的速度太快了，大脑无法跟上节奏。</p><p>第三，阅读纸质内容可以帮助我更快厘清自己想要什么。</p><p>由于我公司电脑和打印机的限制，我在打印的时候，还得经过导出PDF、文件传输、手动翻页双面打印等步骤，我便会开始思量：我真的有必要把这篇文章打印出来看吗？</p><p>看得多了之后，我也发现了：我更喜欢打印什么类型的文章，不同作者写的同一主题的文章之间有很多相似的逻辑和思考，好文章的结构和措辞如何……</p><p>这些东西，我以前并非没有思考，只是当文字从数字屏幕落到了纸上，我发觉自己的思路更加清晰了。</p><p>如果你也想打印出来文章，你可以在电脑浏览器里：</p><ol><li>打开你想要打印的文章链接。</li><li>按下「Ctrl + P」或「⌘ + P」，唤起打印窗口。</li><li>如果你想要节约纸张，你可以将「每张纸打印的页数」设置为2。</li><li>按下打印键，即可打印。</li><li>如果你想稍后打印或发送给另一台电脑打印，你可以选择「另存为PDF」。</li></ol><hr><p>希望你能喜欢今天的文章。下次见面是4月11日，祝好！</p><p>桌沿 2023年3月31日</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本以为10天之期很遥远，一眨眼又到了。&lt;/p&gt;
&lt;p&gt;春夏之交，清明时节，纷雨不断，连寒不绝。季节交替，我似乎一不小心没注意好保暖，有些轻微的感冒😷，请大家一定要注意保暖防寒。&lt;/p&gt;
&lt;p&gt;这周是一次短更新，聊一聊有关阅读的方式：打印出来阅读。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="Newsletter" scheme="http://deskside.github.io/categories/newsletter/"/>
    
    
    <category term="阅读" scheme="http://deskside.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>写给热爱干饭的你：慢慢吃饭，好好生活</title>
    <link href="http://deskside.github.io/eat-slowly/"/>
    <id>http://deskside.github.io/eat-slowly/</id>
    <published>2023-03-10T16:00:00.000Z</published>
    <updated>2023-08-13T07:38:35.885Z</updated>
    
    <content type="html"><![CDATA[<p>在人声鼎沸的食堂里，我拿着餐盘坐了下来。三菜一汤。</p><p>身边的同学们面前也是差不多的饭菜份量。在忙碌了一个早上后，大家坐下来，开始补充能量。</p><p>有人吃得很快，三两下就把面前的饭菜扒拉干净了。他们吃得如此之快，以至于让我怀疑食物究竟是不是整块落入他们腹中的。</p><p>或许，「大快朵颐」并不能合理地修饰他们的饮食状态，「囫囵吞枣」更合适一些。未经充分咀嚼，便匆忙下咽。</p><p>我拿起筷子，本想慢慢一口一口吃，却不知不觉被身边人影响得也开始吃得匆忙起来。很怕麻烦别人的性格决定了我不想让他人在食毕后还要等我很久。</p><p>我尽力吃得很快，却依然赶不上他人。不到十分钟，他们陆陆续续放下碗筷，表现出无聊之态，开始从裤兜中掏出手机玩了起来。整张桌子，只剩我一个人在马不停蹄地努力吃饭。</p><p>终于，我忍不住了。虽然盘中还剩了一些菜，虽然我还吃得下、还想吃，我还是示意大家可以走了。</p><p>以上，是我毕业前我常遇到的场景。我曾经也和那些同学一样，但现在，我已经爱上「慢慢吃饭」了。</p><h2 id="从「用筷子夹饭」开始"><a href="#从「用筷子夹饭」开始" class="headerlink" title="从「用筷子夹饭」开始"></a>从「用筷子夹饭」开始</h2><p>2020年底，经过漫长九个月再回到学校的同学们会发现我瘦了很多。</p><p>总有人问我是怎么瘦下来的，其实总结起来，也不过是人人耳熟能详的那四个字：「少吃多动」。</p><p>不过，虽然宗旨很简单，但实际实践中，其实有很多可以优化的细节。「细嚼慢咽」自然就是「少吃」部分中的关键一步。</p><p>在大学期间，作为武汉本地吃货的好朋友总是隔三岔五带我出去吃香喝辣。虽然过程喜人，但结果堪忧——我们俩以肉眼可见的速度快速变圆。</p><p>而恰逢2020年初疫情肆虐，我只能呆在家里、和家人做饭。没法外出就餐，反而让自己终于有了一个优良的饮食可控环境。</p><p>我做的第一组策略之一，便是「用筷子夹饭」：相比起勺子，筷子每次只能夹起一小块米饭，让我限制了每一口的分量。</p><p>在这里，顺便分享我当时减少和放缓饮食的策略组：</p><ul><li>用筷子夹饭：相比勺子，每次分量更小。</li><li>用较小的碗盛饭：相比大碗，每餐分量更小。</li><li>每餐只吃一碗饭：相比无限制，每餐分量更小。</li><li>碗不离桌：相比允许自己拿起碗，更不会发生扒拉饭碗囫囵下咽的情况。</li><li>每一口饭菜咀嚼至少10下：在心里默默为每一口计数。相比无限制，更能保证自己充分咀嚼。</li></ul><p>漫长的居家时间，也让我和家人有了更多在餐桌前的时光。再配合上自己的策略，我开始能够体会到慢慢吃饭的乐趣。</p><h2 id="慢慢吃饭时，我在做什么？"><a href="#慢慢吃饭时，我在做什么？" class="headerlink" title="慢慢吃饭时，我在做什么？"></a>慢慢吃饭时，我在做什么？</h2><p>在讲慢慢吃饭之前，先来看看我们平常在「没有觉知下吃得很快」或「就是想吃得很快」时，我们究竟做了什么？</p><h3 id="吃得很快时"><a href="#吃得很快时" class="headerlink" title="吃得很快时"></a>吃得很快时</h3><p>有些时候，当我在一段狼吞虎咽后，突然意识到自己吃饭有多快时，我会开始回想和观察自己吃得很快时是怎么样的：</p><p><strong>夹菜变得很快。</strong> 当我不自觉地开始吃得很快时，我会一刻也不停地将饭、菜、肉夹到自己的碗里，再把饭菜送进嘴里。</p><p><strong>拿起碗来吃饭。</strong> 我还有可能不自觉地将碗拿起来，用筷子扒拉饭菜送进嘴里。</p><p><strong>几乎不加咀嚼。</strong> 在口腔里，我只是粗略地咀嚼了两三下，就感到不耐烦了，我会试着就这么吞咽下去。</p><p><strong>甚至试着用汤水冲服。</strong> 如果觉得有些费劲，我还会喝两口汤或饮料，试着用液体加速饭菜进入食道。</p><p><strong>吃得更多、更胀。</strong> 快速进食带来的后果往往是滞后的，我会在吃完饭后感觉喉咙好像有些轻微的噎住感。因为不加咀嚼，食物整块落入腹中，肠胃的负担会更大。因为吃得太快，人又是饱腹感有延迟的生理结构，我们便会吃得更多。</p><h3 id="吃慢一点时"><a href="#吃慢一点时" class="headerlink" title="吃慢一点时"></a>吃慢一点时</h3><p>那么， <strong>什么是慢慢吃饭？</strong></p><p>细嚼慢咽自然是慢慢吃饭最重要的一步，但也只是一个开始。</p><p><strong>对每一口都有觉察。</strong> 所有的进食行为都在一种非常有觉知的情况下进行。</p><p><strong>控制每一口的份量。</strong> 我会保持碗在桌子上不拿起来、用筷子夹饭吃。没错，不是用勺子、而是筷子，细长的筷子每次只能夹起少量的饭菜，让我每一口饭菜的大小都比较合理。</p><p><strong>充分咀嚼食物。</strong> 我会在口腔里充分咀嚼食物。虽然形成习惯以后已经很少计数了，但是至少会咀嚼大概 10 下，让食物在口腔里就已经变得比较细碎，让吞咽变得自然，而非硬吞下去。</p><p><strong>放缓吃下一口的速度。</strong> 扒拉饭碗的时候，我们其实就是模糊了每一口之间的边界，似乎整顿饭只吃了一口、一口连续吃完一整顿。我们可以有意识地拉长每一口之间的间隙，在这之中，我们可以与同餐人闲聊两句，也可以</p><p><strong>避免用水冲服食物。</strong> 我会尽量减少用「汤水冲服食物」的情形出现，试图用汤水强行将未充分咀嚼的食物冲进肚子里，会让自己感觉到难受。让喝汤（或喝饮料）的时候只是喝汤，吃饭的时候只是吃饭。</p><p><strong>享受复合食物口感。</strong> 我不会抗拒享受多种食物夹在一起所带来的复合口感，比如「青脆的生菜包裹着吱吱冒油的烤肉」便是一种很美妙的口感。只要保持每一口的份量在合理范围，我们依然能够轻慢优雅地享受菜脆和肉嫩在口中一同迸发所带来的美妙，而不是马不停蹄地往嘴里填塞食物。</p><p><strong>避免一边吃饭，一边看电子产品。</strong> 手机里的信息流、电视剧等会让我们的注意力完全被吸走，而失去了对食物的觉察，换言之「食之无味」。我如果一边吃饭一边看剧，往往吃完后会不知道自己刚刚究竟吃了什么味道。如果一个人吃饭的时候，像我一样的近视人士，可以考虑脱下眼镜进餐，能够有效劝退自己看手机。</p><p><strong>相反，选择一些吸收速度慢的获取信息方式。</strong> 比如和人聊天、听音乐、听播客等。就自己而言，我会选择和吃饭速度差不多的朋友、同事一起边吃饭边聊天，这样子既能保证自己不孤单，又能让自己充分享受美味。</p><p>有利有弊，在当今社会，慢慢吃饭最大的坏处应该是「比较耗时」，能够花30分钟享受一顿快餐、能够花90分钟享受一顿晚餐的人，可能也能在某种程度上称为「富豪」了。当然，如果你身边都是「高速进食人士」，你还有可能感到格格不入的「社交压力」。</p><h2 id="为什么要慢慢吃饭"><a href="#为什么要慢慢吃饭" class="headerlink" title="为什么要慢慢吃饭"></a>为什么要慢慢吃饭</h2><p>长辈常常叮嘱远离家乡的我们： <strong>要好好吃饭</strong> 。</p><p>其实，究竟什么是好好吃饭？</p><p>除了饮食规律、营养结构合理、吃得卫生，我想慢慢吃饭也是很重要的一点。</p><h3 id="控制体重"><a href="#控制体重" class="headerlink" title="控制体重"></a>控制体重</h3><p>慢慢吃饭，能够帮助我们控制体重。原因可能是：</p><ul><li>饱腹感的滞后效应被削弱了，这意味着我们会更容易感到「吃饱了」并停止进食。</li><li>细嚼慢咽让食物的一部分在口腔就开始消化分解了，让肠胃的负担更小。</li><li>……</li></ul><p>实际上，已经有很多研究在证明或已证实「细嚼慢咽」和「更健康」之间的因果关系。</p><blockquote><p>根据2018年英国医学杂志刊登的一篇文章，研究人员分析了6年间保险公司的健康保险索赔和医生访问的细节、调查了6万名二型糖尿病患者，结论是细嚼慢咽的人肥胖的概率要比狼吞虎咽的人低42%。</p></blockquote><blockquote><p>广岛大学研究人员耗时5年研究了642名男性和441名女性的进食习惯和他们的健康状况。研究人员发现，那些进食速度快的研究对象患代谢综合征的比例为11.6%，正常速度进食的人患这一综合征的比例为6.5%，而进食速度慢的人患这一综合征的比例仅为2.3%。</p></blockquote><h3 id="更有觉知"><a href="#更有觉知" class="headerlink" title="更有觉知"></a>更有觉知</h3><p>这里要提及一个概念：正念（Mindfulness）。</p><p>我以前一直不理解，正念究竟是什么意思？即使看了英文单词，我也不理解。但在几次心理咨询和坚持进行冥想练习后，我逐渐理解了这个词的含义。</p><p>正念，其实是一种对生活有觉知的状态，扩充表述可以是「正在惦念」。这表示我们对「此时此刻自己是在做什么」是有明确的觉知的，我们沉浸在某件事情中，而非三心二意或失神落魄的。</p><p><strong>慢慢吃饭也可以作为正念练习的一种。</strong></p><p>慢慢去品尝这些维系我们生命的食物，而非当作一个任务一样火急火燎完成。在唇齿之间，生命得以维持和延续，这样的奥妙却始终被我们视为理所应当。</p><p>不过，一开始，不需要去想「我如何用慢慢吃饭来练习正念」这样复杂的问题。实际上，从最简单、最容易的「观察」入手就好。</p><p>比如，观察「是什么导致我吃得很快？」开始。我观察到让自己吃得很快的原因有：</p><ul><li>环境很燥热、闷热。</li><li>心情很急躁、慌乱或焦虑。</li><li>食物太烫时，我反而会越烫越想快点趁热吃。</li><li>我的穿着，或我的座位让自己感到不舒服。</li><li>身体感到不适。</li><li>周围有人吃得很快。</li></ul><p>觉知之后，才有改变的可能。既然观察到了这些因素，我就会试着在日后就餐时规避它们。比如选择阴凉的角落、吃饭前深呼吸几下、穿着宽松休闲衣物等。</p><h3 id="更易满足、更幸福"><a href="#更易满足、更幸福" class="headerlink" title="更易满足、更幸福"></a>更易满足、更幸福</h3><p>这是一个很抽象的结论，我犹豫许久是否要放进来。</p><p>分享一个小故事。从高中到大学，再到工作单位，身边总有很多同学、同事觉得饭堂饭菜很难吃。</p><p>但说实话，绝大多数时候，我都觉得饭堂的饭菜很不错，甚至可以说我很喜欢吃饭堂。虽然口味是一个高度私人化的东西，我也不知道她们是如何定义好吃与不好吃的，但我不觉得拥有如此多窗口和菜系的饭堂会没有一个能够满足她们。</p><p>因此，我在思考，如果她们不去急匆匆地下定义、下结论，而是坐下来，慢慢地一口一口品尝食物呢？</p><p>即使大概率比不上外面餐馆的出品，但这些家常食物也依然能让人感到满足。</p><p>而更容易从「我们已经拥有的事物」中获得满足，正是斯多葛主义（Stoic）增强幸福感的主要方法之一。</p><h2 id="一个慢慢吃饭的邀请"><a href="#一个慢慢吃饭的邀请" class="headerlink" title="一个慢慢吃饭的邀请"></a>一个慢慢吃饭的邀请</h2><p>《中国居民膳食指南》在阐述「<a href="http://wjw.ordos.gov.cn/ztzl/yyjkkp/202211/t20221102_3297079.html">准则六：规律进餐，足量饮水</a>」时，对进餐用时和进食速度也提出了要求：</p><blockquote><p>用餐时间不宜过短，也不宜太长。建议早餐用餐时间为15<del>20分钟，午、晚餐用餐时间为20</del>30分钟。应细嚼慢咽享受食物的美味，并营造轻松、愉快的进餐氛围，可以放点轻音乐，谈论轻松的话题；进餐时应相对专注，不宜边进餐边看电视、看手机等。</p></blockquote><p>因此，我邀请你也一起试着放慢吃饭的节奏。</p><p>你可以试着在以下策略中，先从第一个开始尝试一周。第二周，再任选一个新的策略组合在一起，逐渐放慢饮食节奏。</p><ul><li>每一口饭菜咀嚼至少10下。</li><li>每一口之间休息10秒钟。</li><li>用筷子夹饭。</li><li>用较小的碗盛饭。</li><li>碗不离桌，避免扒拉饭碗。</li><li>选择吃饭速度相似的饭搭子。</li><li>……</li></ul><hr><p>本期 Newsletter 就到这里啦，本来动笔前只想写1000+字，最后却洋洋洒洒3000+。「太啰嗦」也是我写作想改进的一个方面。</p><p>感谢你看到这里，下次见面，依然是十天后（2023-03-21）。</p><p>祝你周末愉快。</p><p>桌沿<br>2023-03-11</p><p><strong>参考文献</strong></p><ul><li>何希雨.不要狼吞虎咽地吃晚饭[J].心血管病防治知识(科普版),2018(13):51.</li><li>吃饭太快或致代谢综合征风险高出5倍[J].中国食品学报,2017,17(11):112.</li><li>宋奇思.狼吞虎咽丢营养 细嚼慢咽促健康[J].家庭医学,2022,(01):38-39.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在人声鼎沸的食堂里，我拿着餐盘坐了下来。三菜一汤。&lt;/p&gt;
&lt;p&gt;身边的同学们面前也是差不多的饭菜份量。在忙碌了一个早上后，大家坐下来，开始补充能量。&lt;/p&gt;
&lt;p&gt;有人吃得很快，三两下就把面前的饭菜扒拉干净了。他们吃得如此之快，以至于让我怀疑食物究竟是不是整块落入他们腹中</summary>
      
    
    
    
    <category term="Newsletter" scheme="http://deskside.github.io/categories/newsletter/"/>
    
    
    <category term="健康" scheme="http://deskside.github.io/tags/%E5%81%A5%E5%BA%B7/"/>
    
    <category term="饮食" scheme="http://deskside.github.io/tags/%E9%A5%AE%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>2023 新年贺图</title>
    <link href="http://deskside.github.io/greetings-of-2023/"/>
    <id>http://deskside.github.io/greetings-of-2023/</id>
    <published>2023-01-20T16:00:00.000Z</published>
    <updated>2023-08-13T07:37:56.100Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://smms.app/image/j3ldGDX92oErthz" target="_blank"><img src="https://s2.loli.net/2023/03/27/j3ldGDX92oErthz.png" alt="2022-2023.png"></a></p><div class="tag-plugin colorful note" color="yellow"><div class="title">无奈的温馨提示</div><div class="body"><p>如果图片无法正常显示，很抱歉，由于中国大陆网络政策的限制，部分图片可能无法顺利显示。如果您切换到外网，Boom！你就能看到图片啦！</p></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://smms.app/image/j3ldGDX92oErthz&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://s2.loli.net/2023/03/27/j3ldGDX92oErthz.png&quot; alt=&quot;2022-</summary>
      
    
    
    
    <category term="Annual Report" scheme="http://deskside.github.io/categories/annual-report/"/>
    
    
    <category term="自己" scheme="http://deskside.github.io/tags/%E8%87%AA%E5%B7%B1/"/>
    
  </entry>
  
  <entry>
    <title>How to hide apps on iPhone</title>
    <link href="http://deskside.github.io/hide-app-on-iphone/"/>
    <id>http://deskside.github.io/hide-app-on-iphone/</id>
    <published>2022-11-29T16:00:00.000Z</published>
    <updated>2023-08-13T07:38:27.996Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin tabs" align="center"id="tab_3"><div class="nav-tabs"><div class="tab"><a href="#tab_3-1">中文</a></div><div class="tab active"><a href="#tab_3-2">English</a></div></div><div class="tab-content"><div class="tab-pane" id="tab_3-1"><div class="tag-plugin colorful note" color="red"><div class="title">请注意</div><div class="body"><p>技术类文章并不一定会进行中文翻译。如此文章无中文翻译，请移步英文界面阅读。</p></div></div></div><div class="tab-pane active" id="tab_3-2"><p>Rumor has it that Chinese policeman will randomly check people’s phone while taking public transportation or just walking on the road. If apps which are not supposed to be downloaded in China mainland are found, such as Twitter, Telegram, Facebook and so on, the phone owner would be fined.</p><p>This brings a lot concern. I want to find a secure way to help hide those apps in my iPhone. Here are some solutions.</p><h2 id="The-most-secure-way-Buy-another-back-up-phone"><a href="#The-most-secure-way-Buy-another-back-up-phone" class="headerlink" title="The most secure way: Buy another back-up phone"></a>The most secure way: Buy another back-up phone</h2><p>Buying another phone shall be the most secure way. </p><p>Remember to only download apps and store files that are legitimate in China mainland in this new phone. </p><p>Always take it with you and whenever facing a check from the authority, just hand out this one.</p><p>However, this can be cumbersome as well as money-costing.</p><h2 id="For-android-phone-user-Turn-on-the-guest-mode"><a href="#For-android-phone-user-Turn-on-the-guest-mode" class="headerlink" title="For android phone user: Turn on the guest mode"></a>For android phone user: Turn on the guest mode</h2><p>Most android phones support guest mode nowadays.</p><p>After setting up a new set of lock-screen password, whenever this password is passed in to unlock the phone, it will show another home screen rather than the one owner uses on a daily basis.</p><h2 id="For-iPhone-user-Turn-off-some-settings"><a href="#For-iPhone-user-Turn-off-some-settings" class="headerlink" title="For iPhone user: Turn off some settings"></a>For iPhone user: Turn off some settings</h2><p>Unfortunately iPhone doesn’t support guest mode even until iOS 16. Any app being downloaded on this phone can be found in App Gallery.</p><p>All we can do is to make it invisible from the Spotlight search:</p><ol><li>Go to <code>Setting</code>.</li><li>Find the App you want to hide.</li><li>Tap on <code>Siri and Search</code>.</li><li>Simply turn off every toggle in this page.</li></ol><h2 id="Lock-the-app-with-password"><a href="#Lock-the-app-with-password" class="headerlink" title="Lock the app with password"></a>Lock the app with password</h2><p>If you are still worried about those apps being opened by others, we can lock them:</p><ol><li>Go to <code>Setting</code>.</li><li>Find <code>Screen Time</code>.</li><li>Choose the apps that you don’t want others to find in <code>App Limits</code>, and set the time limit to 1 minute.</li><li>Add a passcode in <code>Screen Time Passcode</code>.</li></ol><p>However, this still left 1 minute usage for others. But it’s the best way right now since Apple have not introduced lock-app feature.</p></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag-plugin tabs&quot; align=&quot;center&quot;id=&quot;tab_3&quot;&gt;&lt;div class=&quot;nav-tabs&quot;&gt;&lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#tab_3-1&quot;&gt;中文&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;tab </summary>
      
    
    
    
    <category term="Coding Notes" scheme="http://deskside.github.io/categories/coding-notes/"/>
    
    
    <category term="iOS" scheme="http://deskside.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Introspection when learning CoreData</title>
    <link href="http://deskside.github.io/coding-introspection/"/>
    <id>http://deskside.github.io/coding-introspection/</id>
    <published>2022-11-24T16:00:00.000Z</published>
    <updated>2023-02-10T03:34:16.477Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin tabs" align="center"id="tab_2"><div class="nav-tabs"><div class="tab"><a href="#tab_2-1">中文</a></div><div class="tab active"><a href="#tab_2-2">English</a></div></div><div class="tab-content"><div class="tab-pane" id="tab_2-1"><div class="tag-plugin colorful note" color="red"><div class="title">请注意</div><div class="body"><p>技术类文章并不一定会进行中文翻译。如此文章无中文翻译，请移步英文界面阅读。</p></div></div></div><div class="tab-pane active" id="tab_2-2"><div class="tag-plugin colorful note" color="orange"><div class="title">Attention</div><div class="body"><p>This is a learning note, which means that there may be mistakes and misunderstanding in it. You are more than welcome to correct me by commenting below.</p></div></div><p>After 2 days of trying to figure out a simple  <code>CoreData</code> problem when building <a href="https://github.com/deskside/emodiary">EmoDiary</a> app, I finally solve it yesterday night. Introspections are made here to help me study more efficiently in th future.</p><h3 id="Key-words-are-incorrect-when-Googling"><a href="#Key-words-are-incorrect-when-Googling" class="headerlink" title="Key words are incorrect when Googling"></a>Key words are incorrect when Googling</h3><p>Due to not fully understanding the structure of Core Data and some basic Swift syntax, I struggled googling blindly resulting in no related answers.</p><p>What I was trying to do is to write a piece of codes that can add one of Emotions (Entity-A) to one attribute of Record (Entity-B). </p><p>But when I type key words to search online, I type in:</p><ul><li>add one entity to another core data (❌)</li><li>core data add attribute to another entity (❌)</li><li>…</li></ul><p>This is incorrect since these key words don’t even touch the essence of my need. </p><p>I didn’t even figure out the relationships between these two entities. They are one to many, not one to one. One Emotion can be assigned to many different Records, while one Record should only have one Emotion.</p><p>So, any blog post or YouTube video considering <code>core data one to many</code> shall have the resolution I need.</p><p>Finally, after typing in the following words, I find <a href="https://youtu.be/Yyd5NARCVcY">the tutorial video</a> I need.</p><ul><li>core data one to many (✅)</li></ul><h3 id="Not-knowing-what-to-code-but-still-coding"><a href="#Not-knowing-what-to-code-but-still-coding" class="headerlink" title="Not knowing what to code but still coding"></a>Not knowing what to code but still coding</h3><p>It’s a bad habit that I didn’t even draft an outline when I started coding, quite like a headless chicken. </p><p>Knowing where to go and how to go is a solid fundamental rule for high productivity. Always sort out what you want to do before actually taking the first step.</p><h3 id="Bad-names"><a href="#Bad-names" class="headerlink" title="Bad names"></a>Bad names</h3><p>I kind of name my core data badly. </p><p>For each record input by user, I call it <code>EmoEachTime</code>. It is too long and not specific enough. Actually, <code>Record</code> is just fine.</p><h3 id="Not-enough-patience"><a href="#Not-enough-patience" class="headerlink" title="Not enough patience"></a>Not enough patience</h3><p>Since I am a native Chinese speaker, I am not so fluent in English reading, especially when it come to CS along with too many terms.</p><p>Be patient. Read docs, watch tutorial videos and study code examples given by Apple.</p></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag-plugin tabs&quot; align=&quot;center&quot;id=&quot;tab_2&quot;&gt;&lt;div class=&quot;nav-tabs&quot;&gt;&lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#tab_2-1&quot;&gt;中文&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;tab </summary>
      
    
    
    
    <category term="Coding Notes" scheme="http://deskside.github.io/categories/coding-notes/"/>
    
    
    <category term="Core Data" scheme="http://deskside.github.io/tags/core-data/"/>
    
  </entry>
  
  <entry>
    <title>Core Data with SwiftUI Tutorial by Paul Hudson</title>
    <link href="http://deskside.github.io/core-data-swiftui-tutorial/"/>
    <id>http://deskside.github.io/core-data-swiftui-tutorial/</id>
    <published>2022-11-23T16:00:00.000Z</published>
    <updated>2023-02-10T03:34:20.998Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin tabs" align="center"id="tab_1"><div class="nav-tabs"><div class="tab"><a href="#tab_1-1">中文</a></div><div class="tab active"><a href="#tab_1-2">English</a></div></div><div class="tab-content"><div class="tab-pane" id="tab_1-1"><div class="tag-plugin colorful note" color="red"><div class="title">请注意</div><div class="body"><p>技术类文章并不一定会进行中文翻译。如此文章无中文翻译，请移步英文界面阅读。</p></div></div></div><div class="tab-pane active" id="tab_1-2"><div class="tag-plugin colorful note" color="orange"><div class="title">Attention</div><div class="body"><p>This is a learning note, which means that there may be faults and misunderstanding in it. You are more than welcome to correct me by commenting.</p></div></div><h2 id="L1-Why-does-self-work-for-ForEach"><a href="#L1-Why-does-self-work-for-ForEach" class="headerlink" title="L1: Why does .self work for ForEach?"></a>L1: Why does .self work for ForEach?</h2><p><code>Hashable</code> is essential for SwiftUI to differentiate and locate each view component.</p><p>For more infomation: <a href="https://mp.weixin.qq.com/s/n5yJUPJ4htv8bsCWc0yZ2A">HASH是什么？“哈希值校验”又是怎么回事儿？</a></p><h2 id="L2-Creating-NSManagedObject-subclasses"><a href="#L2-Creating-NSManagedObject-subclasses" class="headerlink" title="L2: Creating NSManagedObject subclasses"></a>L2: Creating NSManagedObject subclasses</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extension</span> <span class="title class_">Movie</span> &#123;</span><br><span class="line">  <span class="keyword">@nonobjc</span> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">func</span> <span class="title class_">fetchRequest</span>() -&gt; <span class="title class_">NSFetchRequest</span>&lt;<span class="title class_">Movie</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">NsFetchReauest</span>&lt;<span class="type">Movie</span>&gt;(entityName： <span class="string">&quot;Movie&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// We can make this not optional by simply deleting question mark</span></span><br><span class="line">  <span class="keyword">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> title: <span class="type">String</span>?</span><br><span class="line">  <span class="keyword">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> director: <span class="type">String</span></span><br><span class="line">  <span class="keyword">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> year: <span class="type">Int16</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// In case of nil collapsing, we can add</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">var</span> wrappedTitle:<span class="type">String</span> &#123;</span><br><span class="line">    title <span class="operator">??</span> <span class="string">&quot;Unknown Title&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">Movie</span> ：<span class="title class_">Identifiable</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Core data only load data when is actually needed (lazy load). This is good.</p><h2 id="L3-Conditional-saving-of-NSManagedObjectContext"><a href="#L3-Conditional-saving-of-NSManagedObjectContext" class="headerlink" title="L3: Conditional saving of NSManagedObjectContext"></a>L3: Conditional saving of NSManagedObjectContext</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ContentView</span>: <span class="title class_">View</span> &#123;</span><br><span class="line">  <span class="meta">@Environment</span>(\. managedobjectContext) <span class="keyword">var</span> moc</span><br><span class="line">  <span class="keyword">var</span> body:<span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">Button</span>(<span class="string">&quot;Save&quot;</span>)&#123;</span><br><span class="line">      <span class="comment">// moc.hasChanges help us be sure about saving data only when changed</span></span><br><span class="line">      <span class="keyword">if</span> moc.hasChanges &#123;</span><br><span class="line">        <span class="keyword">try?</span> moc.save()</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="L4-Ensuring-Core-Data-objects-are-unique-using-constraints"><a href="#L4-Ensuring-Core-Data-objects-are-unique-using-constraints" class="headerlink" title="L4: Ensuring Core Data objects are unique using constraints"></a>L4: Ensuring Core Data objects are unique using constraints</h2><p>To make sure some specific attributes have unique values, add attribute name to <code>Constraints</code> in the right column. </p><h2 id="L5-Filtering-FetchRequest-using-NSPredicate"><a href="#L5-Filtering-FetchRequest-using-NSPredicate" class="headerlink" title="L5: Filtering @FetchRequest using NSPredicate"></a>L5: Filtering @FetchRequest using NSPredicate</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;universe == &#x27;Star Wars&#x27; &quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;universe == %@ &quot;</span>, <span class="string">&quot;Star Wars&quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find all data whose inital character is before F in alphabet</span></span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;universe &lt; %@ &quot;</span>, <span class="string">&quot;F&quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IN</span></span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;universe IN %@ &quot;</span>, [<span class="string">&quot;Aliens&quot;</span>,<span class="string">&quot;Firefly&quot;</span>])) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// BEGINSWITH is Case sensitive, while BEGINSWITH[c] is not</span></span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;name BEGINSWITH %@ &quot;</span>, <span class="string">&quot;E&quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;name BEGINSWITH %@ &quot;</span>, <span class="string">&quot;e&quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;name BEGINSWITH[c] %@ &quot;</span>, <span class="string">&quot;e&quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CONTAINS</span></span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;name CONTAINS[c] %@ &quot;</span>, <span class="string">&quot;e&quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NOT</span></span><br><span class="line"><span class="meta">@FetchRequest</span>(sortDescriptors: []， predicate: <span class="type">NSPredicate</span>(format:<span class="string">&quot;NOT name CONTAINS[c] %@ &quot;</span>, <span class="string">&quot;e&quot;</span>)) <span class="keyword">var</span> ships: <span class="type">FetchedResults</span>&lt;<span class="type">Ship</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AND, OR</span></span><br></pre></td></tr></table></figure><h2 id="L6-Dynamically-filtering-FetchRequest-with-SwiftUI"><a href="#L6-Dynamically-filtering-FetchRequest-with-SwiftUI" class="headerlink" title="L6: Dynamically filtering @FetchRequest with SwiftUI"></a>L6: Dynamically filtering @FetchRequest with SwiftUI</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Parent View </span></span><br><span class="line"><span class="keyword">import</span> CoreData</span><br><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ContentView</span>: <span class="title class_">View</span> &#123;</span><br><span class="line">  <span class="meta">@Environment</span>(\.managedObjectContext) <span class="keyword">var</span> moc</span><br><span class="line">  <span class="meta">@State</span> <span class="keyword">private</span> <span class="keyword">var</span> lastNameFilter <span class="operator">=</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> body:<span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">VStack</span> &#123;</span><br><span class="line">      <span class="type">FilteredList</span>(filter: lastNameFilter)</span><br><span class="line">      </span><br><span class="line">      <span class="type">Button</span>(<span class="string">&quot;Change filter to S&quot;</span>)&#123;</span><br><span class="line">        lastNameFilter <span class="operator">=</span> <span class="string">&quot;S&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Child View</span></span><br><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">FilteredList</span>: <span class="title class_">View</span> &#123;</span><br><span class="line">  <span class="meta">@FetchRequest</span> <span class="keyword">var</span> fetchRequest: <span class="type">FetchedResults</span>&lt;<span class="type">Singer</span>&gt;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">List</span>(fetchRequest, id:\.<span class="keyword">self</span>)&#123;singer <span class="keyword">in</span></span><br><span class="line">      <span class="type">Text</span>(<span class="string">&quot;<span class="subst">\(singer.wrappedFirstName)</span> <span class="subst">\(singer. wrappedLastName)</span>&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">init</span>(filter： <span class="type">String</span>)&#123;</span><br><span class="line">    <span class="comment">// The underscore is very essential</span></span><br><span class="line">    _fetchRequest <span class="operator">=</span> <span class="type">FetchRequest</span>&lt;<span class="type">Singer</span>&gt; (sortDescriptors: [], predicate:<span class="type">NSPredicate</span>(format: <span class="string">&quot;lastName BEGINSWITH %@&quot;</span>,filter))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>To handle any kind of Entity and filters, use following codes:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Parent View </span></span><br><span class="line"><span class="keyword">import</span> CoreData</span><br><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ContentView</span>: <span class="title class_">View</span> &#123;</span><br><span class="line">  <span class="meta">@Environment</span>(\.managedObjectContext) <span class="keyword">var</span> moc</span><br><span class="line">  <span class="meta">@State</span> <span class="keyword">private</span> <span class="keyword">var</span> lastNameFilter <span class="operator">=</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> body:<span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">VStack</span> &#123;</span><br><span class="line">      <span class="type">FilteredList</span>(filterKey：<span class="string">&quot;lastName&quot;</span>, filterValue: lastNameFilter)&#123; (singer:<span class="type">Singer</span>) <span class="keyword">in</span></span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;<span class="subst">\(singer.wrappedFirstName)</span> <span class="subst">\(singer. wrappedLastName)</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="type">Button</span>(<span class="string">&quot;Change filter to S&quot;</span>)&#123;</span><br><span class="line">        lastNameFilter <span class="operator">=</span> <span class="string">&quot;S&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Child View</span></span><br><span class="line"><span class="keyword">import</span> CoreData</span><br><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">FilteredList</span>&lt;<span class="title class_">T</span>: <span class="title class_">NSManagedObject</span>, <span class="title class_">Content</span>: <span class="title class_">View</span>&gt;: <span class="title class_">View</span> &#123;</span><br><span class="line">  <span class="meta">@FetchRequest</span> <span class="keyword">var</span> fetchRequest: <span class="type">FetchedResults</span>&lt;<span class="type">T</span>&gt;</span><br><span class="line">  <span class="keyword">let</span> content: (<span class="type">T</span>) -&gt; <span class="type">Content</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">List</span>(fetchRequest, id:\.<span class="keyword">self</span>)&#123;item <span class="keyword">in</span></span><br><span class="line">      <span class="keyword">self</span>.content(item)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">init</span>(filterKey：<span class="type">String</span>, <span class="params">filterValue</span>: <span class="type">String</span>, <span class="meta">@ViewBuilder</span> <span class="params">content</span>: <span class="keyword">@escaping</span> (<span class="type">T</span>) -&gt; <span class="type">Content</span>)&#123;</span><br><span class="line">    <span class="comment">// The underscore is very essential</span></span><br><span class="line">    _fetchRequest <span class="operator">=</span> <span class="type">FetchRequest</span>&lt;<span class="type">T</span>&gt; (sortDescriptors: [], predicate:<span class="type">NSPredicate</span>(format: <span class="string">&quot;%K BEGINSWITH %@&quot;</span>,filterKey, filterValue))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="L7-One-to-many-relationships-with-FetchRequest-and-SwiftUI"><a href="#L7-One-to-many-relationships-with-FetchRequest-and-SwiftUI" class="headerlink" title="L7: One-to-many relationships with @FetchRequest and SwiftUI"></a>L7: One-to-many relationships with @FetchRequest and SwiftUI</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/0QGt0THnlwU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Core Data files </span></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">Country</span>&#123;</span><br><span class="line">   <span class="comment">// Omit some codes here</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// shortName must be unique in order to specify the relationship</span></span><br><span class="line">   <span class="keyword">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> shortName:<span class="type">String</span>?</span><br><span class="line">   <span class="keyword">@NSManaged</span> <span class="keyword">public</span> <span class="keyword">var</span> candy: <span class="type">NSSet</span>?</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">var</span> candyArray: [<span class="type">Candy</span>]&#123;</span><br><span class="line">     <span class="keyword">let</span> <span class="keyword">set</span> <span class="operator">=</span> candy <span class="keyword">as?</span> <span class="type">Set</span>&lt;<span class="type">Candy</span>&gt; <span class="operator">??</span> []</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">set</span>.sorted&#123;</span><br><span class="line">       <span class="comment">// Remember to declare `wrappedName` in `Candy`</span></span><br><span class="line">       <span class="variable">$0</span>.wrappedName <span class="operator">&lt;</span> <span class="variable">$1</span>.wrappedName</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// View</span></span><br><span class="line"><span class="comment">// Please follow the video step by step</span></span><br></pre></td></tr></table></figure><hr><p><strong>Reference</strong></p><p>[Core data swiftui tutorial](<a href="https://www.youtube.com/@twostraws/search?query=&quot;core">https://www.youtube.com/@twostraws/search?query=&quot;core</a> data swiftui”)</p><ol><li><a href="https://youtu.be/vSHbMhy6XH4">Why does .self work for ForEach?</a></li><li><a href="https://youtu.be/pIAH3RVVXZE">Creating NSManagedObject subclasses</a></li><li><a href="https://youtu.be/K2BNOeA2G9k">Conditional saving of NSManagedObjectContext</a></li><li><a href="https://youtu.be/NZIlmRSB8l8">Ensuring Core Data objects are unique using constraints</a></li><li><a href="https://youtu.be/sh1lzhgsc64">Filtering @FetchRequest using NSPredicate</a></li><li><a href="https://www.youtube.com/watch?v=O4043RVjCGU&t=0s">Dynamically filtering @FetchRequest with SwiftUI</a> </li><li><a href="https://youtu.be/0QGt0THnlwU">One-to-many relationships with Core Data, SwiftUI, and @FetchRequest Challenges</a></li><li><a href="https://youtu.be/Yyd5NARCVcY">Core Data One to Many Relationship &amp; Core Data Delete Rules : SwiftUI</a></li></ol></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag-plugin tabs&quot; align=&quot;center&quot;id=&quot;tab_1&quot;&gt;&lt;div class=&quot;nav-tabs&quot;&gt;&lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#tab_1-1&quot;&gt;中文&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;tab </summary>
      
    
    
    
    <category term="Coding Notes" scheme="http://deskside.github.io/categories/coding-notes/"/>
    
    
    <category term="SwiftUI" scheme="http://deskside.github.io/tags/swiftui/"/>
    
    <category term="Core Data" scheme="http://deskside.github.io/tags/core-data/"/>
    
  </entry>
  
  <entry>
    <title>SF symbol usage</title>
    <link href="http://deskside.github.io/sfsymbol-usage/"/>
    <id>http://deskside.github.io/sfsymbol-usage/</id>
    <published>2022-11-23T02:07:18.000Z</published>
    <updated>2023-02-10T03:36:42.258Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin tabs" align="center"id="tab_4"><div class="nav-tabs"><div class="tab"><a href="#tab_4-1">中文</a></div><div class="tab active"><a href="#tab_4-2">English</a></div></div><div class="tab-content"><div class="tab-pane" id="tab_4-1"><div class="tag-plugin colorful note" color="red"><div class="title">请注意</div><div class="body"><p>技术类文章并不一定会进行中文翻译。如此文章无中文翻译，请移步英文界面阅读。</p></div></div><script src="https://gist.github.com/deskside/469fa0775f06597cb47a5db8ef3d2f4a.js"></script></div><div class="tab-pane active" id="tab_4-2"><div class="tag-plugin colorful note" color="orange"><div class="title">Attention</div><div class="body"><p>SwiftUI only. For UIKit, please go to the reference. <br>Most features are only availble in iOS 15 or later.</p></div></div><h2 id="Why-SF-symbol"><a href="#Why-SF-symbol" class="headerlink" title="Why SF symbol"></a>Why SF symbol</h2><p>On Apple SF symbol website, many development-friendly advantages are addressed:</p><ul><li>With over 4,400 symbols in total, SF Symbols 4 features over 1000 new symbols, variable color, automatic rendering, and new unified layer annotation.</li><li>Symbols come in nine weights and three scales, and automatically align with text labels.</li><li>They can be exported and edited using vector graphics editing tools to create custom symbols with shared design characteristics and accessibility features.</li><li>Color can now be dynamically applied to system and custom symbols using a percentage value to convey strength or progress over time. </li><li>Many symbols use hierarchical rendering automatically for added depth and detail without needing to specify a rendering mode.</li><li>Custom symbols feature a shared layer structure across rendering modes making annotation faster and easier. Layer annotations can be viewed at a glance in the new preview area.</li></ul><p>In a word, SF symbols are so easy to use. We don’t even need to install anything in Xcode, they just come with SwiftUI.</p><p>Before getting started, you should download <a href="https://developer.apple.com/sf-symbols/">SF symbol app</a>. You don’t need it to render SF symbols in Xcode, but you would find it so convient for quick look-up and name-copy. </p><h2 id="Basic-usage"><a href="#Basic-usage" class="headerlink" title="Basic usage"></a>Basic usage</h2><p>To add a SF symbol in your SwiftUI app , simply write down:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;externaldrive.badge.plus&quot;</span>)</span><br></pre></td></tr></table></figure><p>To create the most commonly seen icon-text view everywhere in your iPhone, simply write down:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Label</span>(<span class="string">&quot;Please try again&quot;</span>, systemImage: <span class="string">&quot;xmark.circle&quot;</span>)</span><br></pre></td></tr></table></figure><p>If you want to put SF symbol inside a line of text:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Text</span>(<span class="string">&quot;Please press the <span class="subst">\(Image(systemName: <span class="string">&quot;calendar&quot;</span>))</span> button&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Size-weight"><a href="#Size-weight" class="headerlink" title="Size, weight"></a>Size, weight</h2><p>You can adjust the size in either of the following ways:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;airplane&quot;</span>)</span><br><span class="line">    .font(.largeTitle)</span><br><span class="line"></span><br><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;house&quot;</span>)</span><br><span class="line">    .font(.system(size: <span class="number">72</span>))</span><br></pre></td></tr></table></figure><p>You can adjust the weight:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;keyboard&quot;</span>)</span><br><span class="line">    .font(.largeTitle.weight(.black))</span><br></pre></td></tr></table></figure><h2 id="Color"><a href="#Color" class="headerlink" title="Color"></a>Color</h2><p>You can render a hierarchical SF Symbol like this:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;square.stack.3d.down.right.fill&quot;</span>)</span><br><span class="line">    .symbolRenderingMode(.hierarchical)</span><br><span class="line">    .foregroundColor(.indigo)</span><br></pre></td></tr></table></figure><p>You can enable multicolor SF Symbols like this:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// iOS15 or later</span></span><br><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;externaldrive.badge.plus&quot;</span>)</span><br><span class="line">    .symbolRenderingMode(.multicolor)</span><br><span class="line"></span><br><span class="line"><span class="comment">// iOS14</span></span><br><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;externaldrive.badge.plus&quot;</span>)</span><br><span class="line">    .renderingMode(.original)</span><br></pre></td></tr></table></figure><h2 id="Adjustment"><a href="#Adjustment" class="headerlink" title="Adjustment"></a>Adjustment</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;bell&quot;</span>)</span><br><span class="line">    .symbolVariant(.slash)</span><br><span class="line"></span><br><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;bell&quot;</span>)</span><br><span class="line">    .symbolVariant(.square)</span><br><span class="line"></span><br><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;bell&quot;</span>)</span><br><span class="line">    .symbolVariant(.fill.slash)</span><br></pre></td></tr></table></figure><p>There is also a <code>.none</code> option that renders the original image, which is helpful if you need to move between two states of the icon. For example, this flips a toggle between two states</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ContentView</span>: <span class="title class_">View</span> &#123;</span><br><span class="line">    <span class="meta">@State</span> <span class="keyword">private</span> <span class="keyword">var</span> showingAlerts <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">Toggle</span>(isOn: <span class="variable">$showingAlerts</span>) &#123;</span><br><span class="line">            <span class="type">Label</span>(<span class="string">&quot;Show Alerts&quot;</span>, systemImage: <span class="string">&quot;bell&quot;</span>)</span><br><span class="line">                .symbolVariant(showingAlerts <span class="operator">?</span> .none : .slash)</span><br><span class="line">        &#125;</span><br><span class="line">        .toggleStyle(.button)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="VoiceOver"><a href="#VoiceOver" class="headerlink" title="VoiceOver"></a>VoiceOver</h2><p>Many SF Symbols have useful VoiceOver labels by default, such as “heart” being read out as “love” and “calendar.badge.plus” being read as “add to calendar.”</p><p>However, many other icons don’t have such built-in names, including complex icons such as “arrowshape.turn.up.backward.circle”. In these circumstances you should set a custom accessibility label describing the content for VoiceOver.</p><p>In SwiftUI, you attach a custom accessibility label to an SF Symbol like this:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;arrowshape.turn.up.backward.circle&quot;</span>)</span><br><span class="line">    .accessibilityLabel(<span class="string">&quot;Go back&quot;</span>)</span><br></pre></td></tr></table></figure><p>If you’re using a label, VoiceOver will use your label’s text even if it isn’t currently being displayed.</p><p><strong>Tip:</strong> You can also place your accessibility label into your <code>Localizable.strings</code> file using the same name as the SF Symbol, and SwiftUI will use that instead.</p><h2 id="Adapt-to-context"><a href="#Adapt-to-context" class="headerlink" title="Adapt to context"></a>Adapt to context</h2><p>In iOS 15 and later many SF Symbols automatically adapt to how they are used, including the way the “signature” symbol changes to match various localizations such as Japanese or Hebrew.</p><p>However, SwiftUI has one power feature that UIKit lacks, which is the ability to render SF Symbols according to their context. This is most important inside <code>TabView</code>, where the correct variant of a symbol is system-dependent: on iOS Apple’s human interface guidelines recommend filled icons, whereas on macOS they recommend using strokes instead.</p><p>SwiftUI does something clever here: if you use an SF Symbol for a tab item, you <em>shouldn’t</em> specify whether it’s filled or not – it will automatically adapt based on the system.</p><p>So, this will create a tab item using a filled person symbol on iOS, but a stroked person on macOS:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">TabView</span> &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Your View Here&quot;</span>)</span><br><span class="line">        .tabItem &#123;</span><br><span class="line">            <span class="type">Label</span>(<span class="string">&quot;Home&quot;</span>, systemImage: <span class="string">&quot;person&quot;</span>)</span><br><span class="line">                .symbolVariant(.none)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>Reference</strong></p><p><a href="https://www.hackingwithswift.com/articles/237/complete-guide-to-sf-symbols">The Complete Guide to SF Symbols – Hacking with Swift</a></p></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag-plugin tabs&quot; align=&quot;center&quot;id=&quot;tab_4&quot;&gt;&lt;div class=&quot;nav-tabs&quot;&gt;&lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#tab_4-1&quot;&gt;中文&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;tab </summary>
      
    
    
    
    <category term="Coding Notes" scheme="http://deskside.github.io/categories/coding-notes/"/>
    
    
    <category term="Swift" scheme="http://deskside.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Xcode connection with GitHub in China</title>
    <link href="http://deskside.github.io/xcode-connection-with-github-in-china/"/>
    <id>http://deskside.github.io/xcode-connection-with-github-in-china/</id>
    <published>2022-11-21T16:00:00.000Z</published>
    <updated>2023-02-10T03:35:04.460Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin tabs" align="center"id="tab_5"><div class="nav-tabs"><div class="tab"><a href="#tab_5-1">中文</a></div><div class="tab active"><a href="#tab_5-2">English</a></div></div><div class="tab-content"><div class="tab-pane" id="tab_5-1"><p>对于中国大陆的开发者，无法顺利连接 Xcode 是常常令我们头疼不已的事。</p><p>此文可以解决即使打开 VPN 也无法顺利使得 Xcode 连接 Github 并 push commits 的问题。</p><p>在 Mac 的 AppStore 下载 <a href="https://apps.apple.com/cn/app/ihosts-etc-hosts-%E7%BC%96%E8%BE%91%E5%99%A8/id1102004240?mt=12">iHost</a>，「编辑」里面的 Host 文件，拷贝<a href="https://raw.hellogithub.com/hosts">此网站</a>的全部内容至其中（该网站的<a href="https://github.com/521xueweihan/GitHub520">GitHub Repo</a>页面在此，可以进去给作者打赏）。点击「应用」。</p><p><img src="https://user-images.githubusercontent.com/68626438/201594064-fc026418-344d-49c7-aa32-1761bc68e1ab.png"></p><p>搞定！</p><div class="tag-plugin colorful note" color="yellow"><div class="title">注意</div><div class="body"><p>当网络环境变化的时候，比如切换 WiFi、开关 VPN、切换 VPN 节点，都会导致相关的 Host 网址变化，每次网络变化后，需要重复前述操作配置Host。</p></div></div><hr><p>参考文献：</p><p><a href="https://zhuanlan.zhihu.com/p/486712912#:~:text=GitHub%20%E9%93%BE%E6%8E%A5%E7%BC%93%E6%85%A2%E6%88%96%E8%80%85%E8%BF%9E%E4%B8%8D%E4%B8%8A%E5%A4%A7%E6%A6%82%E7%8E%87%E6%98%AF%20DNS%20%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%87%BA%E9%97%AE%E9%A2%98%E4%BA%86%EF%BC%8C%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%80%E9%97%AE%E9%A2%98%E7%9A%84%E5%8A%9E%E6%B3%95%E5%B0%B1%E6%98%AF%E4%BF%AE%E6%94%B9%20hosts,%E6%96%87%E4%BB%B6%EF%BC%8C%E5%B0%86%20IP%20%E5%9C%B0%E5%9D%80%E7%9B%B4%E6%8E%A5%E4%B8%8E%E5%9F%9F%E5%90%8D%E5%AF%B9%E5%BA%94%E8%B5%B7%E6%9D%A5%EF%BC%8C%E8%B7%B3%E8%BF%87%E8%A7%A3%E6%9E%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E4%BB%8E%E8%80%8C%E6%AD%A3%E5%B8%B8%E6%89%93%E5%BC%80%20github.com%20%E3%80%82">GitHub连不上的解决方案</a></p></div><div class="tab-pane active" id="tab_5-2"><p>For China mainland developer, the difficulty for connecting Github can’t be ignored.</p><p>Download <a href="https://apps.apple.com/cn/app/ihosts-etc-hosts-%E7%BC%96%E8%BE%91%E5%99%A8/id1102004240?mt=12">iHost</a> on Mac.</p><p>Edit the host file, add following code from <a href="https://raw.hellogithub.com/hosts">this site</a> (Checkout the <a href="https://github.com/521xueweihan/GitHub520">Github repo</a> of this site).</p><img width="752" alt="image" src="https://user-images.githubusercontent.com/68626438/201594064-fc026418-344d-49c7-aa32-1761bc68e1ab.png"><p>Boom! All set. You may now push code to Github smoothly in Xcode.</p><hr><p>Reference:</p><p><a href="https://zhuanlan.zhihu.com/p/486712912#:~:text=GitHub%20%E9%93%BE%E6%8E%A5%E7%BC%93%E6%85%A2%E6%88%96%E8%80%85%E8%BF%9E%E4%B8%8D%E4%B8%8A%E5%A4%A7%E6%A6%82%E7%8E%87%E6%98%AF%20DNS%20%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%87%BA%E9%97%AE%E9%A2%98%E4%BA%86%EF%BC%8C%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%80%E9%97%AE%E9%A2%98%E7%9A%84%E5%8A%9E%E6%B3%95%E5%B0%B1%E6%98%AF%E4%BF%AE%E6%94%B9%20hosts,%E6%96%87%E4%BB%B6%EF%BC%8C%E5%B0%86%20IP%20%E5%9C%B0%E5%9D%80%E7%9B%B4%E6%8E%A5%E4%B8%8E%E5%9F%9F%E5%90%8D%E5%AF%B9%E5%BA%94%E8%B5%B7%E6%9D%A5%EF%BC%8C%E8%B7%B3%E8%BF%87%E8%A7%A3%E6%9E%90%E8%BF%87%E7%A8%8B%EF%BC%8C%E4%BB%8E%E8%80%8C%E6%AD%A3%E5%B8%B8%E6%89%93%E5%BC%80%20github.com%20%E3%80%82">GitHub连不上的解决方案</a></p><script src="https://gist.github.com/deskside/469fa0775f06597cb47a5db8ef3d2f4a.js"></script></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tag-plugin tabs&quot; align=&quot;center&quot;id=&quot;tab_5&quot;&gt;&lt;div class=&quot;nav-tabs&quot;&gt;&lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#tab_5-1&quot;&gt;中文&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;tab </summary>
      
    
    
    
    <category term="Coding Notes" scheme="http://deskside.github.io/categories/coding-notes/"/>
    
    
    <category term="GitHub" scheme="http://deskside.github.io/tags/github/"/>
    
    <category term="Xcode" scheme="http://deskside.github.io/tags/xcode/"/>
    
  </entry>
  
  <entry>
    <title>从今天开始写博客</title>
    <link href="http://deskside.github.io/how-to-build-a-personal-blog/"/>
    <id>http://deskside.github.io/how-to-build-a-personal-blog/</id>
    <published>2022-07-22T16:00:00.000Z</published>
    <updated>2023-02-10T01:51:25.692Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在前几期 Newsletter 中，我向各位读者朋友介绍了我的<a href="https://deskside.github.io/">个人网站</a>，有读者朋友回信咨询如何建立，加上我也想要复盘一下心得和方法，因此就有了这篇文章。</p><p>于我而言，个人网站更像是一个自留地，不受各种算法的影响。我可以尽情地在这里发布、整理文章，不用担心干扰。</p><p>我的个人网站，实际上是「博客」。博客其实是一个互联网非常古早的产物了。在我读小学的时候，我舅舅就经常写新浪博客，甚至来我们家做客的时候，还要关心家里电脑能否联网给他看一下博客。</p><p>但随着互联网发展，博客这种「安静」的信息传递方式已经难以为企业赚钱了，企业纷纷转向了视频、公众号这种「聒噪」的方式，争夺用户的注意力。</p><p>这意味着两件事情：一是现在博客的关注度确实不高，二则是发展多年的博客，技术已经十分平民化了。事实上，无需高深的编程和代码知识，任何会操作电脑的人都能够跟着教程一步一步完成。</p><p>值得一提的是，我们在网上搜到的其他建站教程，有些会宣称「不用一行代码」。事实上，想在由计算机构成的互联网世界有一片自留地、又不依托任何社交平台，必然需要一定量的编程知识。</p><p>当然，如前所述，你不需要学过编程，掌握这些知识也不难。</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>事实上，我想先强调一些有关建站的基础：</p><ul><li>坚持写作、拍视频等创作能力。</li><li>使用外网的能力。</li><li>查阅（英文）文档的能力。</li></ul><p>这三个能力，我想缺一不可。关键在于，即使你现在没有也没关系。谁的能力不是慢慢强化得来的呢？我们会在一天天的发展中，逐渐获得并强化这些能力。我逐一解释：</p><p><strong>坚持创作</strong>。建站给人的感觉很酷，但是如果只有一个空壳的话，再酷也不会吸引人长久驻留。</p><p><strong>使用外网</strong>。无论是后文需要使用的 GitHub，还是大部分国际公认的优秀网站，如 Figma、Notion 等，基本都来自于欧美国家（这并非指中国大陆没有优秀的互联网产品）。个中原因不在此分析，只是从结果来看：我们如果不掌握使用外网的能力，将会错过互联网世界的绝大部分美景。</p><p><strong>查阅（英文）文档</strong>。文档通常是一个互联网产品的说明书。至于为什么需要英文能力，和第二点的原因类似，既然众多优秀网站和产品都来自于海外，那在语言上势必优先支持英文。况且，当我们遇到问题时，很多解决方案也是由英文写就的。</p><p>多嘴说一句，我遇到了很多人声称自己「英语不好」，听来只觉痛心。语言并非天堑鸿沟，退一万步说，我们每个人都至少熟练掌握了一门语言：中文（普通话或方言）。只要多运用，任何语言都会逐渐成为我们身体的一部分。因此，别再说自己英语不好了，不如说自己「英语暂时不熟悉，还需要多说多看」。</p><p>我并非计算机系，未经过系统的专业化训练。在以下教程中，可能会出现错误，还请海涵和指正。本文会同步发表于个人网站，如需更好的代码复制体验可以移步此处。</p><hr><p>在第一章的最后，我想分享编程区 up 主 Codesheep 在视频<a href="https://www.bilibili.com/video/BV1Yb411a7ty?spm_id_from=333.1007.top_right_bar_window_history.content.click">手把手教你从0开始搭建自己的个人博客</a>中说过的一句话：</p><blockquote><p>不要怕遇到问题，因为你一定会遇到问题。没关系，解决问题就好了。</p></blockquote><p>我在 2020 年的时候也曾经尝试建立个人博客，预期太高、以为会很顺利，结果一直不断遇到一些小问题，感觉受挫、没一会儿就放弃了。不久前刷到了技术博主的视频，这句话给了我很大的信心和勇气。</p><p>每个人的电脑配置、网络环境各有差异，你一定会遇到大大小小的问题。没关系，遇到问题就去寻找解决方案，逐个尝试后，解决掉就好了！</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>正常来说，以下安装过程适用于 Windows、macOS、Linux。</p><p>与网上能找到的绝大多数相似教程相比，我更想用一种诗意的比喻方式来我们可以将最终的网站成品类比为「一个装饰精美的储物盒，盒子里装着一沓纸」。</p><h3 id="打造工作台：构筑环境"><a href="#打造工作台：构筑环境" class="headerlink" title="打造工作台：构筑环境"></a>打造工作台：构筑环境</h3><p>首先，构筑环境。我们需要一个「工作台」来加工和维护储物盒。如果我们的工作间是我们的电脑，那工作台便是 <a href="https://nodejs.org/en/">Node.js</a> 和 <a href="https://git-scm.com/download/win">Git</a> 。你不需要理解它们的原理，但我们需要在电脑里安装它们。</p><p>请分别点击链接进入二者的官网，网页一般会默认提供适配当前电脑的下载选项。</p><ul><li>Node.js 请选择左边的绿色方框下载。</li><li>Git 请选择 Standalone Installer 中的 64-bit Git for Windows Setup（如果你知道自己的电脑是 32 位版本，请选择 32-bit Git for Windows Setup）。</li></ul><h3 id="找到好工具：使用终端"><a href="#找到好工具：使用终端" class="headerlink" title="找到好工具：使用终端"></a>找到好工具：使用终端</h3><p>有了工作台，有了目标，我们还需要一个趁手的扳手来执行操作。无论是什么系统，每台电脑都提供了这个扳手，那就是「<a href="https://sspai.com/post/45534">终端</a>」。</p><p>终端实际上是我们与电脑「直接沟通」的中介，平常我们用电脑时的各种软件其实是我们与电脑「间接沟通」的中介。</p><p>终端无需额外下载，你可以在搜索中（Windows 中敲击 win+s，macOS 中敲击 command+space）输入终端二字打开。你可以考虑<a href="https://docs.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell?view=powershell-7.2">在 Windows、Linux 和 macOS 上安装 PowerShell</a>，对 Windows 用户的体验优化很明显。</p><p>终端实际上是在特定文件夹内的操作，因此在你的输入位置前总是有一行文件路径名。因此，有两个命令很重要。（#号后面为注释内容，请不要在终端中输入#号后面的内容，下同）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd folderName #进入名为folderName的子文件夹中</span><br><span class="line">cd..          #返回上级文件夹</span><br></pre></td></tr></table></figure><h3 id="先打造外框：博客框架"><a href="#先打造外框：博客框架" class="headerlink" title="先打造外框：博客框架"></a>先打造外框：博客框架</h3><p>一个储物盒，如果没有稳定的框架，势必会散架。对于博客而言，框架便是 <a href="https://hexo.io/zh-cn/index.html">Hexo</a> 。</p><p>Hexo 自 2012 年发布以来，已经稳定提供服务 10 年，由台北人陳嘉輝（Tommy Chen）编写。基本上，如果你想要搭建博客，框架不是选择 Hexo 便就是 Hugo，足以证明其强大。</p><p>与我们日常安装软件不同，Hexo 的安装只需要一行代码即可。但是，在哪里输入代码呢？</p><p>我们可以在任意位置新建文件夹，右键菜单中选择「在终端中打开」。以下所有代码，每一行输入后需敲击一次 Enter 键。</p><p>在弹出的窗口中，我们逐行输入以下代码，检查工作台是否搭建好了（检查 Node.js 和 Git 是否安装好了）。如果分别出现一行版本号，即安装完毕。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v #检查node版本</span><br><span class="line">npm -v  #检查npm版本</span><br></pre></td></tr></table></figure><p>由于国内网络环境限制，电脑访问外网通常非常缓慢。我们需要将工作台改为中国大陆版本（即更改镜像源）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>紧接着，确认工作台无误后，我们便可以先打造好博客框架了（安装Hexo）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>我们同样需要检查我们的博客框架是否打造好了（检查Hexo安装情况）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h3 id="开始造盒子：建储物盒"><a href="#开始造盒子：建储物盒" class="headerlink" title="开始造盒子：建储物盒"></a>开始造盒子：建储物盒</h3><p>框架已经完成，意味着我们拥有了建储物盒的模具。我们便可以使用模具来创建第一个储物盒。</p><p>你可以在你电脑的任意位置新建文件夹，既然我们要建立个人博客，那就起名「blog」吧！随后，在「blog」文件夹内，右键菜单中选择「在终端中打开」。以上操作，你也可以在终端中输入以下代码代替：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog      # 初始化创建，会在你所在位置创建 blog 文件夹</span><br><span class="line">cd blog             # 进入 blog 目录</span><br><span class="line">npm install         # 进一步安装hexo所需文件</span><br></pre></td></tr></table></figure><p>稍等一会儿，略显粗糙的第一个储物盒就建好了！</p><p>什么，你没看到？仔细看看刚才的文件夹，里面应该出现了不少文件。这些配置文件便构筑起了我们的储物盒。回到终端里，继续输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean          # 清除所有记录</span><br><span class="line">hexo generate       # 生成静态网页</span><br><span class="line">hexo s              # 启动服务，默认端口号是4000</span><br></pre></td></tr></table></figure><p>接下来，我们使用浏览器打开 <a href="http://localhost:4000/">http://localhost:4000/</a> ，便可以看到一个默认的储物盒了。</p><h3 id="自定义外观：博客主题"><a href="#自定义外观：博客主题" class="headerlink" title="自定义外观：博客主题"></a>自定义外观：博客主题</h3><p>我们都喜欢好看的东西，对于网站亦如此。随着 Hexo 这么多年的发展，来自全球的开发者已经为其创造了 <a href="https://hexo.io/themes/">300 多个风格各异的主题</a>，足够让你挑花眼。</p><p>你可以随意浏览。点击图片可以进入该主题的范例网站，点击标题可以进入该主题的 GitHub 页面。GitHub 页面中一般会写明安装方法和配置要求。实际上，安装方法无外乎两种：</p><p>第一种，在 GitHub 页面中点击蓝色的 Code 按钮，选择「Download ZIP」，下载包含该主题所有代码的文件。解压后放入我们的「blog」文件夹中的「themes」中（下文将使用「blog&#x2F;themes」表达相同意思）。</p><p>第二种，在使用一行代码，从终端直接同步该主题的所有代码。通常在博客的Github页面都会写明如何安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone xxx themes/yyy</span><br><span class="line"># xxx通常为该Github页面的网址</span><br><span class="line"># yyy通常为该Hexo主题的名字</span><br></pre></td></tr></table></figure><p>值得注意的是，如果你遇到了 GitHub 访问很慢、无法git clone的情况，你可以采取「曲线救国」的策略。Gitee 是国内类似 Github 的代码托管网站，注册后，在「+」中选择「从 Github&#x2F;Gitlab 中导入仓库」，输入你想要的Github网址。</p><p>安装好之后的下一步，是配置。即在各个主题提供的范围内进行自定义。每个主题都各有不同，在这里无法逐一介绍。请发挥前述提到的第三个能力，根据主题的 GitHub 中的 README 文档，完成该任务吧！</p><p>值得强调的是，丰富的主题其实是一把双刃剑，好处是我们可以为网站精挑细选主题，但坏处便是我们很容易深陷其中、舍本逐末。好的网站，最重要的并不是外观，而是内容。如果没有扎实、吸引人的内容，访客的鼠标只会快速点击「关闭」键，和你说再见。</p><p>我的<a href="https://deskside.github.io/">个人网站</a>目前看起来非常有模有样，很大一部分原因是我已经在前期有了长足的文章积累。在完成前面的步骤之后，我其实只需要将文章复制粘贴生成即可，</p><h3 id="向世界发布：部署网站"><a href="#向世界发布：部署网站" class="headerlink" title="向世界发布：部署网站"></a>向世界发布：部署网站</h3><p>部署（deploy），听起来很高级，但是我们可以理解为将博客从本地发布到云端，让我们可以通过一行网址访问。</p><p>由于该部分内容并不难，请参阅<a href="https://easyhexo.com/1-Hexo-install-and-config/1-4-deploy-hexo.html#%E9%83%A8%E7%BD%B2%E5%88%B0-github">部署 Hexo | Easy Hexo 👨‍💻</a>的教程进行配置。</p><p>出于安全性考虑，GitHub 应该会要求用户提供 SSHkey，你可以理解为电脑和 GitHub 之间的「暗号」，请参阅<a href="https://www.runoob.com/w3cnote/view-ssh-public-key.html">查看本机 ssh 公钥，生成公钥</a>。</p><p>值得一提的是，我并不推荐你部署到国内代码托管网站，如 Gitee。不推荐的理由是老生常谈了：审查机制。以 Gitee 为例，每一次网址重新发布，用户都必须进入 Gitee 手动点击部署，十分麻烦。除此之外，Gitee 会使用机器以不明朗的规则审查文字，十分正常的内容也可能被判定违规、不予部署。</p><p>当然，Gitee 的（唯一）好处是国内访问速度很快。相比之下，GitHub 作为真正开源的国际网站，在国内访问速度并不稳定。请自行斟酌考量部署网站的选择。</p><p>如果你具有更强的能力可以将博客部署到自己的服务器、域名之上，那自然是再好不过了。即便没有，使用 GitHub 等网站提供的部署服务也非常方便优雅。</p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><h3 id="我怎么写"><a href="#我怎么写" class="headerlink" title="我怎么写"></a>我怎么写</h3><p>所有的博客文章，我们都可以在本地的<code>博客文件夹名字/source/_post</code>中看到，并且会以 <code>.md</code>格式存在，md 是 markdown 的缩写。</p><p>如果你完全不知道 markdown 是什么，那么你必须先阅读<a href="https://sspai.com/post/25137">认识与入门 Markdown</a>，了解 markdown 的常用语法。别担心，这不仅学起来很简单，学会之后，也会让我们以后的文字处理都变得简单起来。</p><p>如果你对常用 markdown 语法有所遗忘，请随时查阅<a href="https://markdown.com.cn/cheat-sheet.html#%E6%80%BB%E8%A7%88">Markdown 语法速查表</a>。</p><p>如果你想选择一款好用的 markdown 编辑器，你可以在这些<a href="https://markdown.com.cn/tools.html#%E7%BC%96%E8%BE%91%E5%99%A8">Markdown 工具</a>中进行选择。当然，电脑自带的纯文本工具（即记事本或文本编辑）其实也完全足以编辑，只不过无法对你写下来的 markdown 语法进行即时渲染。</p><p>当你想要新建一篇文章时，你可以二选一：</p><ul><li>直接在前述文件夹中右键新建md文件，并编辑其中的内容。</li><li>使用终端命令 <code>hexo new post xxx</code>，xxx为博客网址名。</li></ul><h3 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h3><p>每篇 hexo 文章都会需要一个 front-matter，用以告知这篇文章的基础信息是什么。通常而言，「标题、日期、标签、分类」即足矣。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">date: 2022-7-23</span><br><span class="line">tag: [a,b,c]</span><br><span class="line">categories: yyy</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>如果你还想了解更多，请参阅<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter | Hexo</a>。值得注意的是，每个主题通常都会提供一些特殊的信息用以配置 front-matter，你通常可以在主题的 GitHub 页面中找到配置指南。</p><h3 id="多台电脑"><a href="#多台电脑" class="headerlink" title="多台电脑"></a>多台电脑</h3><p>如果你拥有两台及以上的电脑，希望每台电脑上你都可以编辑博客内容并发布，你可以参阅<a href="https://www.jianshu.com/p/4bcf2848b3fc">多台电脑使用Hexo</a>。过程很简单，因此在此不再复述。</p><h2 id="彩蛋：插入-B-站或-YouTube-视频"><a href="#彩蛋：插入-B-站或-YouTube-视频" class="headerlink" title="彩蛋：插入 B 站或 YouTube 视频"></a>彩蛋：插入 B 站或 YouTube 视频</h2><h3 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h3><p>绝大部分的 Hexo 主题，都支持通过一行复制粘贴的代码嵌入 B 站或 YouTube 的视频，非常适合视频创作者来构建自己的个人网站。那么，这行神奇的代码从哪里复制来呢？</p><p>很简单，用浏览器打开任意你想要嵌入的视频，找到分享按钮里的「嵌入」键，拷贝由 B 站或 YouTube 提供的这行代码，并将这行代码粘贴到博客文章中去。当然，不只限于这两个视频网址，任何提供嵌入代码的视频网站都可以。</p><p>重新渲染博客后，打开对应页面，你就可以看到一个可以直接在网页内点击播放的视频了！</p><h3 id="时分跳转"><a href="#时分跳转" class="headerlink" title="时分跳转"></a>时分跳转</h3><p>涉及视频插入的场景，我们常常会想要指明几分几秒。比如我们想要插入一个教程，但我们想特别注明只需从第 2 分 30 秒开始看就好了。那我们应该如何操作呢？</p><p>对于 Youtube 视频，非常简单，嵌入功能原生支持设置时间节点。我们只需要在嵌入界面设置「2:30」或「150」即可，前者为几分几秒，后者为秒数，二者等效。</p><p>对于B站视频，则显得稍微麻烦些许。我们需要在提供的代码中的「src」引号内的最后添加上「&amp;t&#x3D;02m30s」。如果视频有多个分p，你可以添加「p&#x3D;2&amp;t&#x3D;02m30s」，用以表示跳转至第2部分的第2分30秒。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># B站提供的视频嵌入代码</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=291374696&amp;bvid=BV1uf4y1b7R8&amp;cid=360416569&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 在「src」引号内的最后添加「&amp;t=02m30s」</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=291374696&amp;bvid=BV1uf4y1b7R8&amp;cid=360416569&amp;page=1&amp;t=02m30s&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="宽高调整"><a href="#宽高调整" class="headerlink" title="宽高调整"></a>宽高调整</h3><p>在具体的网页渲染中，我们还可以指明播放器的宽度和高度。</p><p>无论是 YouTube 还是 B 站提供的播放器，我们都可以在第一个括号内加上一段代码，这样子我们便可以自定义播放器的宽高了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 添加宽高参数以前</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=291374696&amp;bvid=BV1uf4y1b7R8&amp;cid=360416569&amp;page=1&amp;t=02m30s&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 添加宽高参数以后，注意每个参数之间需要有空格</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=291374696&amp;bvid=BV1uf4y1b7R8&amp;cid=360416569&amp;page=1&amp;t=02m30s&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你可以输入两种类型的值来定义宽或高：</p><ul><li>百分比，即播放器占浏览器的百分比。如「width&#x3D;”100%”」。</li><li>纯数字，即像素值。如「height&#x3D;”300”」。</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>到此为止，我的一个小梦想已经圆了：建立个人网站。</p><p>于我而言，在互联网上有一个自己的域名，打开后装满了自己设计和书写的内容，带来的成就感和满足感还是很强的。</p><p><strong>接下来，就是你创作的过程了！</strong></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://www.bilibili.com/video/BV1Yb411a7ty?spm_id_from=333.1007.top_right_bar_window_history.content.click">手把手教你从0开始搭建自己的个人博客</a></li><li><a href="https://www.jianshu.com/p/4bcf2848b3fc">多台电脑使用Hexo</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;在前几期 Newsletter 中，我向各位读者朋友介绍了我的&lt;a href=&quot;https://deskside.github.io/&quot;&gt;个</summary>
      
    
    
    
    <category term="Coding Notes" scheme="http://deskside.github.io/categories/coding-notes/"/>
    
    
    <category term="GitHub" scheme="http://deskside.github.io/tags/github/"/>
    
    <category term="Hexo" scheme="http://deskside.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>三年健身回顾</title>
    <link href="http://deskside.github.io/workout-review/"/>
    <id>http://deskside.github.io/workout-review/</id>
    <published>2022-07-12T16:00:00.000Z</published>
    <updated>2023-02-10T03:49:19.643Z</updated>
    
    <content type="html"><![CDATA[<p>从2019-8-1开始算起的话，至今健身已经快三年了。在此总结和分析一下这三年的经验教训。</p><p><strong>这三年的训练情况：</strong></p><ul><li>因为这三年中途断断续续有停止的情况，所以训练并不是很连贯。</li><li>三年都没有去健身房，我并不是很想去健身房练，一是想省钱，二是更喜欢在家里锻炼、觉得去健身房很麻烦，三是恰逢毕业、工作换城市，开卡并不是一个很好的选择。我在家和宿舍都有可更换重量的哑铃。</li><li>感觉还是不太有章法，训练起来比较草率，也缺乏目的性、计划性。</li><li>睡眠质量、时长不太有保障，而且2021年全年经常熬夜，导致皮肤状况和健身效果都不太好。</li><li>虽然想要控制饮食，但基本上没做到。主要因为我经常外出就餐导致卡路里计算很麻烦。</li></ul><p><strong>到目前为止的训练效果：</strong></p><ul><li>因为最初训练的时候缺乏目的性，因此在这里可以分类讨论一下。<ul><li>如果以保持健康和正常体态为目的，比较成功，这几年成功地瘦了下来，而且一直维持在65kg左右的体重。</li><li>如果以爱上运动为目的，比较成功，运动三年，一方面更自信了，一方面更喜欢运动或健身了，身体素质也有提升，平时也会</li><li>如果以六块腹肌为目的，不太成功，腹部脂肪堆积比较严重，腹部没有减下去。</li><li>如果以全身增肌为目的，不太成功，除了腹部，大腿后侧脂肪堆积很严重，明显软塌塌的一大块，以及手臂的肌肉线条也出不来。</li></ul></li></ul><p><strong>下一阶段的计划：</strong></p><ul><li>之前一直试图自己记录健身数据，但是总是因为太过复杂或繁琐而放弃，今天购买了训记App，希望下一阶段能用好。</li><li>控制饮食应该还是最重要的事情。</li><li>提早睡眠。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从2019-8-1开始算起的话，至今健身已经快三年了。在此总结和分析一下这三年的经验教训。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这三年的训练情况：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为这三年中途断断续续有停止的情况，所以训练并不是很连贯。&lt;/li&gt;
&lt;li&gt;三年都没有</summary>
      
    
    
    
    <category term="Health Notes" scheme="http://deskside.github.io/categories/health-notes/"/>
    
    
    <category term="健身" scheme="http://deskside.github.io/tags/%E5%81%A5%E8%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Solved - zsh command not found (macOS)</title>
    <link href="http://deskside.github.io/zsh-command-not-found/"/>
    <id>http://deskside.github.io/zsh-command-not-found/</id>
    <published>2022-07-07T16:00:00.000Z</published>
    <updated>2023-02-10T03:35:01.442Z</updated>
    
    <content type="html"><![CDATA[<p>因为需要制作个人网站和文档，我电脑中需要安装 node.js（包含 npm）和 git。</p><p>顺利安装后，运行如下指令，使用 npm 安装 hexo 和 docsify 都没有问题，十分顺利。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm i docsify-cli -g</span><br></pre></td></tr></table></figure><h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>但是，在安装完成后，准备开始使用 hexo 和 docsify 的时候，所有相关指令都无法使用，终端会给出如下错误。（请注意我使用的是 macOS 系统）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 假如我运行 docsify 相关指令</span><br><span class="line">docsify init</span><br><span class="line">zsh command not found:docsify</span><br><span class="line"></span><br><span class="line"># 假如我运行 hexo 相关指令</span><br><span class="line">hexo s</span><br><span class="line">zsh command not found:hexo</span><br></pre></td></tr></table></figure><p>我在网上查了好久，但那是相关的解决措施都很「高级」……作为一个编程小白，我真的很茫然，完全看不懂。</p><p>所幸在一番折腾后，我终于解决了这个问题。接下来我将解决方案和过程分享给你，希望能发挥效果。</p><h2 id="理解Terminal、Shell"><a href="#理解Terminal、Shell" class="headerlink" title="理解Terminal、Shell"></a>理解Terminal、Shell</h2><p>首先，我们需要理解zsh是什么，以及有什么用。（没错，我连这个都不知道是什么！）</p><p>zsh全名为Z-shell，本质即是Shell。听起来很复杂，别着急，请继续看。</p><p>我们日常在使用电脑的时候，比如聊微信、打游戏、看网页，实际上是通过开发者设计好的用户界面（User Interface, UI）在与电脑交互，是一种间接沟通方式，但胜在图文并举、直观易懂。</p><p>但如果我们想要更直接地与电脑交互，我们便需要另一个工具，这便是终端（Terminal）。终端可以直接与计算机的内核（Kernel）沟通，是一种直接沟通方式，但往往需要具备一定的计算机知识，否则看到纯文字的界面会很茫然。</p><p>终端想要与计算机沟通时，不能直接与内核沟通，否则一旦用户错误操作，整个计算机就会崩溃。因此，我们还需要一个中介，用来接受用户输入的命令，并由其与内核沟通，这便是Shell（壳层）。</p><p>Shell有很多种，比如bash、csh、tcsh等，你会发现它们都以shell的缩写「sh」结尾。</p><p>因此，前述终端中报错，实际上是zsh在告诉我们：「虽然你用npm安装了相关程序，但是我找不到呀，你得告诉我文件路径在哪里哦！」</p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>既然理解了问题，那我们就可以着手开始解决问题。</p><p>首先，我们需要找到zsh的配置文件，在终端中输入以下指令应该能打开：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open ~/.zshrc</span><br></pre></td></tr></table></figure><p>如果终端反馈找不到该文件，或者有错，请你使用Finder打开用户文件夹（我的文件夹为joeysimac），并按下<code>command+shift+.</code>，显示隐藏文件夹。如果你不知道你的用户文件夹路径是多少，请重启终端并输入以下指令，终端会告诉你当前路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line"># 我的程序返回了如下指令</span><br><span class="line">/Users/joeysimac</span><br></pre></td></tr></table></figure><p>打开文件后，应该会有一行大致如下的文字：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$HOME/bin:/usr/local/bin:$PATH</span><br></pre></td></tr></table></figure><p>其中以<code>:</code>断开的便是不同的<code>/bin路径</code>，请记住这几个不同的路径，接下来可能会用到。</p><p>因为 macOS 从 Catalina 版开始，其默认 shell 从 bash 改为 zsh。因此，你需要找到<code># User configuration</code>，在其下方加入一行代码，告知zsh「之前bash的相关配置你可以用哦」。最终效果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># User configuration</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>其次，我们需要知道刚刚通过npm全局安装好的程序（以hexo为例），它现在具体在什么地方。</p><p>因为我是使用npm安装的，所以通常而言，安装好的程序应该会在<code>/Users/joeysimac/.npm-global/bin</code>这个文件夹中。</p><p>因此，我们需要将hexo现在的位置<code>/Users/joeysimac/.npm-global/bin/hexo</code>告诉zsh。请将下列路径替换为你自己的路径，然后在终端中输入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s 你的程序路径 /bin路径</span><br><span class="line"># 示例：sudo ln -s /Users/joeysimac/.npm-global/bin/hexo /usr/local/bin</span><br></pre></td></tr></table></figure><p>如果发生错误，请尝试将<code>/bin路径</code>更换为前述的其他路径。</p><p>最后，为了使配置文件立刻生效，我们需要在终端中输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><p>到此为止，你可以试着重启终端，试着运行相关程序。依旧以hexo为例，逐行敲入下列代码，看看终端是否能正常运行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="复盘"><a href="#复盘" class="headerlink" title="复盘"></a>复盘</h2><p>这是我第一次撰写技术向文章，因为我本身并非计算机专业，也未系统学习过编程，单纯只是感兴趣，算是纯小白了。无论学习哪种语言，学习编程的道路都不会一帆风顺。</p><p>遇到问题卡壳了，那就尝试转换心情去完成别的任务吧，很多难题往往在散步的过程中灵感迸发就解决了，或者睡一觉之后脑子就想通了。</p><p>从积极的角度而言，遇到问题说明我们有了收获新知识的可能性，这难道不可喜可贺吗！</p><hr><p>参考文献：</p><ul><li><a href="https://blog.csdn.net/u010954988/article/details/80404329#:~:text=%22%20zsh%3A%20command%20not%20found%3A%20%22%E8%BF%99%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9B%B8%E4%BF%A1%E5%A4%A7%E5%AE%B6%E9%83%BD%E4%B8%8D%E9%99%8C%E7%94%9F%EF%BC%8C%E4%BB%A5%E5%89%8D%E6%AF%8F%E6%AC%A1%E9%81%87%E5%88%B0%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%E9%83%BD%E6%98%AFGoogle%E4%B8%80%E4%B8%8B%EF%BC%8C%E7%84%B6%E5%90%8E%E5%91%8A%E8%AF%89%E4%BD%A0%E5%9C%A8,xxx%20%E6%96%87%E4%BB%B6%E6%B7%BB%E5%8A%A0%20xxx%20%E6%96%87%E5%AD%97%EF%BC%8C%E6%88%96%E8%80%85%E5%9C%A8Terminal%E8%BF%90%E8%A1%8C%20xxx%20%E5%91%BD%E4%BB%A4%E5%8D%B3%E5%8F%AF%EF%BC%8C%E6%9C%89%E4%BA%9Bwork%EF%BC%8C%E6%9C%89%E4%BA%9B%E4%B8%8D%E8%A1%8C%E3%80%82">zsh: command not found from CSDN</a></li><li><a href="https://blog.csdn.net/qq_33833327/article/details/78086973">Mac ln命令报错：Operation not permitted</a></li><li><a href="https://www.jianshu.com/p/a891af6f87e0">shell有哪些？Zsh和Bash的区别是什么？</a></li><li><a href="https://sspai.com/post/45534">玩转 Terminal 终端：入门指南及进阶技巧</a></li><li><a href="https://www.cnblogs.com/sddai/p/9769086.html">命令行界面 (CLI)、终端 (Terminal)、Shell、TTY的区别 - stardsd - 博客园 (cnblogs.com)</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为需要制作个人网站和文档，我电脑中需要安装 node.js（包含 npm）和 git。&lt;/p&gt;
&lt;p&gt;顺利安装后，运行如下指令，使用 npm 安装 hexo 和 docsify 都没有问题，十分顺利。&lt;/p&gt;
&lt;figure class=&quot;highlight plaint</summary>
      
    
    
    
    <category term="Coding Notes" scheme="http://deskside.github.io/categories/coding-notes/"/>
    
    
    <category term="Terminal" scheme="http://deskside.github.io/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>一起来打破日记吧！</title>
    <link href="http://deskside.github.io/break-traditional-diary/"/>
    <id>http://deskside.github.io/break-traditional-diary/</id>
    <published>2022-07-02T16:00:00.000Z</published>
    <updated>2023-02-10T03:33:11.809Z</updated>
    
    <content type="html"><![CDATA[<p>你还记得初高中那段时间的小心思吗？</p><p>那些对喜欢的人小心翼翼的关注，害怕被同学孤立或讨厌的忧心，害怕自己进步得太慢的焦虑……所有的小心思都在身体里翻涌，在夜色下辗转，在阳光下焦灼。作为学生，我们大多会选择一种成本最低的方式，将这些心绪排解——写日记。</p><p>或许，只有当偶尔打开装满了初高中旧物的盒子时，我们才会意识到初高中时的自己每天有多少心绪在涌动。于我而言，我有好几个大开本的本子都被写满了，那些细碎、隐秘又青涩的想法就这么被沉淀下来。彼时的我，大部分的心思都不敢付诸实践，更不敢与人言说，但总归需要一个出口将其宣泄。</p><p>无独有偶，现在B站有一类视频很多博主都在做，那就是「翻阅当年的同学录&#x2F;日记」。一方面，和小时候的自己相比，绝大多数人都成长了很多，当年的那些烦恼大多已付笑谈，岁月给人带来的变化让人着迷。</p><p>另一方面，人类是记忆的生物。似乎当年龄迈过 20 的坎后，我们都开始喜欢「追忆当年」了。每次朋友聚会总是会聊到往事，而每次聊到又都会让大家开怀一笑。</p><h2 id="当日记不再是日记"><a href="#当日记不再是日记" class="headerlink" title="当日记不再是日记"></a>当日记不再是日记</h2><p>我妈时常鼓励我多写日记，因为「不写下来就会忘了」。长期以来，我对日记的态度也大致如此。</p><p>在写日记这件事上，我并没能长期坚持，但也并非半途而废，要找一个词来形容，那或许就是「间歇性写日记」吧！</p><p>我总是隔一段时间就会对写日记热情高涨，每天都会抽出时间来写日记，但是在保持记录一段时间后又会消沉下去，接着又进入下一次循环。</p><p>究其原因，我想，这或许是我对「日记」的刻板印象在作祟。</p><p>我总认为写日记就像写流水账，要尽量事无巨细地将自己从早到晚的活动都追踪到位。可想而知，纯粹的流水账十分耗时，一天的流水账至少得写20分钟；不仅如此，流水账写起来很无聊、读起来更无聊，甚至还不如小学生日记有意思，写完之后，大多数人再也不会翻开。</p><p>因此，如果只是为了「记住事情」，流水账日记未免显得有些无用功了。日记必须是对今天的追踪记录吗？</p><hr><p>除了写日记之外，我还是一个狂热的记录爱好者。我喜欢追踪和记录很多东西：睡眠状况、财务流水、健身内容、看过的书、观过的影、和对象的日常、情绪变化、小成就、便便情况。总之，只要我感兴趣，我就会试着将其记录下来。</p><p>随着记录的内容、种类变多，我逐渐发现「日记」只是记录自己的一种方式，或许和发朋友圈、微博、即刻、flomo、视频 vlog 等类似，只是形式不同，但更有隐私。</p><p>换言之，我们没有必要「将鸡蛋装在同一个篮子里」。试着打破固有认知，日记不必只有一种形式，它为什么不可以是多种形式的集合呢？</p><h2 id="打破传统日记的限制"><a href="#打破传统日记的限制" class="headerlink" title="打破传统日记的限制"></a>打破传统日记的限制</h2><p>在我的理解中，传统日记大概会有如下特征：一天一篇、流水化记录、每天挑固定时间写……</p><p>如此，传统日记很难不显得呆板、费时又无趣。想要打破传统日记，其实非常简单：那就是要想清楚自己为什么要记录日记。这实际上便是要求自己想清楚：我希望通过「写日记」给自己带来什么好处？</p><p>因此，如果你能从纯粹的记录中获得乐趣，那么即使你写完后再也不打开日记本，也没有关系。在这种情况下，写日记的目的已经达到了，不是吗？</p><p>根据自己的需求，我们便可以将传统日记打破成任意「形状」。自己想要记录什么，就将记录的内容视为「今天的日记」的一个组成部分。</p><p>比如，小桌子是一位健身爱好者，他有个专门的本子对健身进行记录，而且他每天都会拍下自己的三餐发朋友圈，他每天还会在给对象发消息，告诉他自己今天做了什么。那么，我们不妨就把小桌子的日记看成「健身记录本+餐饮记录朋友圈+聊天记录里的行程动态」。小桌子不必再专门在晚上腾出时间来写日记，任何一天他想要回溯自己的生活，他只需要在这三者中检索一番，便能还原个八九不离十。</p><hr><p>到此为止，这篇文章的使命似乎已经完成了。</p><p>但是，关于「如何写日记」或者说「如何成为更好的自己」，我还有想要分享的经验。记录是用图文音视频的方式，将我们的生活固定下来的过程。</p><p>我现在大概会有如下三种日记。每一种都允许碎片化的记录，当你想写的时候就可以动动手指，不用等到深夜身心俱疲只想睡觉的时候才动笔。而且我相信这三种日记形式会对你很有帮助。</p><h3 id="情绪日记：观察自己"><a href="#情绪日记：观察自己" class="headerlink" title="情绪日记：观察自己"></a>情绪日记：观察自己</h3><p>生而为人，「情绪」是我们的重要组成部分。对于积极情绪，我们总是趋之若鹜。但对于消极情绪，我们似乎总试图压制和否定它们。</p><p>如果对心理学有一些了解，我们便会知道，无论是正面还是负面情绪，我们都应该直面它、顺其流动，不应该压制在心底。否则久而久之，情绪的积压便会以更强的合力引爆出更大的问题。</p><p>面对情绪，将自己视为「一个忠实的观察者」或许是很好的选择。像旁观者一样客观、冷静地观察自己的情绪起伏，并记住一定不要对自己做出评价，诸如「我情绪这么糟糕，真的好差劲」这样的想法只会对自己百害而无一利。在<a href="https://deskside.github.io/post/fogg-behavioural-models">成长的关键不是自我鞭策，而是正确的方法</a>中，我分享了《福格行为模型》中一句「反常识」的话，却让我感到醍醐灌顶：</p><blockquote><p>不要自我批评，因为人们在感觉良好的状态下改变，效果最佳。</p></blockquote><p>如果你对这样做的效果表示质疑，我想说「记录本身即是抵抗」，对情绪的记录本身就是舒缓情绪的过程。</p><p>如果你有更深层次的质疑，比如「我为什么要花时间关注自己的情绪」。我想，无论你如何否定，情绪都是对人的行为影响很大的因素，对情绪的控制能力影响着一个人处事的水平，而对情绪的感知能力决定着我们能在多大程度上控制好情绪。</p><p>实话说，我自己就不是一个能够很好地控制情绪的人。这并不是说我常常会在别人面前失控（如暴怒、大哭等），而是说，我很容易让情绪影响到自己行为和心态。一旦情绪走低，我的所有行动都会陷入瘫痪，但又不是一种休息或放松，这种心理瘫痪的状态反而比正常的学习工作还要疲累。</p><p>值得一提的是，控制情绪不等于压制情绪。正如控制体重不等于疯狂减重一样，我们的目标是在控制自己的情绪在合理范围内波动。</p><p>那么，既然要做一个忠实的观察者，最好的方式或许就是记录情绪日记了：把一天内的情绪的起起落落都如实记录下来。</p><p>现在有很多 App 也会关注情绪问题，但大多都只以天为单位关注。例如，这类 App 往往通过一个月历图，展示一个月每一天的单个情绪。这便带来了一个问题：到了晚上，我不知道应该为今天选择哪一种情绪。</p><p>因为，随着遇到的事情不同，我一天内可能会经历「平静、焦虑、喜悦、悲伤、愤怒」等情绪中的不止一个情绪，像是波浪起伏、有高有低。如果要我选择唯一的情绪作为今天的象征，那我应该选波峰还是波谷呢？因此，我会觉得这种记录方式违背了「忠实记录情绪」的原则。<img src="https://s2.loli.net/2022/07/02/ItB6oPS1RV8vjel.jpg"></p><p>事实上，你根本不需要 App。仅仅一个方格本或横线本就足够了。</p><p>我目前暂时将自己的情绪分为平静、焦虑、喜悦、悲伤、愤怒，你可以用英文首字母 P、J、H、S、A 来代表各个情绪。你也可以根据自己的实际情况，思考自己容易出现什么样的情绪。</p><p>在本子每一页的每一根横栏上，先写下日期，再用 5 个格子区分上午、中午、下午、傍晚、深夜，每天根据情绪填入对应时间段就好啦。</p><p>你还可以做出更多 DIY 或更有创意的设计。比如，我拿了 5 根彩色铅笔，用颜色涂满对应格子，这样既直观美观，又简洁简单。</p><p><img src="https://s2.loli.net/2022/07/02/XhYFftGqDNsecal.jpg" alt="https://s2.loli.net/2022/07/02/XhYFftGqDNsecal.jpg"></p><h3 id="积极日记"><a href="#积极日记" class="headerlink" title="积极日记"></a>积极日记</h3><p>在治愈系美剧<a href="https://deskside.github.io/post/this-is-us">《我们这一天》</a>中，有一次，爸爸 Jack 独自带着三个熊孩子出门逛街。但是，中午看电影的时候，老大趁爸爸睡着，偷偷溜出去闲逛、走丢了。爸爸带着剩下的两个孩子慌慌张张找了好久。所幸，妈妈 Rebecca 提前在孩子鞋舌处留了电话号码，很快就在警察局将老大带回了家。</p><p>Jack 和 Rebecca 带着孩子们回到了家。虽然到家了，但三个孩子都因为走丢事件，感到慌张和不安。Jack 自责不已，深感自己毁了孩子的一天。Rebecca 不仅没有责怪他，反而告诉他「只要孩子们还没上床睡觉，今天就没有结束，你依然可以改变孩子们对今天的看法」。</p><p>于是，晚上的时候，Jack 发明了新的家庭游戏，成功逗孩子们开心，最后孩子们上床时脸上挂着温暖的笑容，白天的恐慌已被夜晚的美好所稀释。</p><p>孩子们如此，作为成年人的我们亦然。</p><p>我在上一期<a href="https://deskside.github.io/post/talk-with-bf-about-family">我和好朋友的聊天：童年的伤痛像一根掰不断的倒刺</a>中，讨论到我在某些事情上偏悲观态度，这会大幅影响「专注当下」的能力，进而让我难以「享受当下」。</p><p>比如，如果我和朋友出门游玩一天，我早上出发时的热情与喜悦，到了下午往往就会变成对「快乐的时光总是这么短暂」的忧伤。随后的时间里，我很有可能沉浸在类似的想法里，始终像是「身处众人间，心游离在外」。</p><p>我希望自己能以更积极的态度专注每一天的生活，不要总是试图分析意义。因此，我开始写一种新的日记「积极日记」。</p><p>每天晚上，洗澡前或临睡前，我要写下至少三件今天发生的让我感到愉悦、感恩或开心的事情，无论多么微不足道都可以。哪怕只是朋友陪我一起聊天，哪怕只是今天的天空很湛蓝，只要能让自己感到积极情绪，就值得记录。</p><p>在形式上，这或许最接近传统日记。但区别在于：我只允许自己关注遇到的让自己感觉不错的事件，将注意力放到事物的积极一面。而且形式更轻量，不用繁琐重述，只需要简单列明就好了。</p><p>积极日记虽然不是什么灵丹妙药，但如果能长期坚持下来，应该会引导我以更积极的视角迎接生活中的挑战，并且享受生活中哪怕最微小的乐趣。</p><h3 id="碎片记录：聊天记录、照片、动态"><a href="#碎片记录：聊天记录、照片、动态" class="headerlink" title="碎片记录：聊天记录、照片、动态"></a>碎片记录：聊天记录、照片、动态</h3><p>如前所述，既然「日记」的定义被打破了，那我们也不必拘泥于「日记必须成文」的想法了。</p><p>互联网的发展让沟通变得简便，因此也更频繁。以我和我的对象为例，我们一天中绝大多数行程和动态，都会通过微信告知对方。因此，如果我们俩想不起来某一天做了什么，往往翻一翻聊天记录就能得到答案。</p><p>因此，聊天记录本质上就是一种日记。虽然相比起以前的流水账日记而言，查找起来没那么方便，但这也免去了我们写日记的功夫，不是吗？</p><hr><p>同理，技术发展让照片也变得更加好用。</p><p>我很喜欢 iPhone 相簿的桌面小组件，系统每天都会为我选择一些照片陈列上来，每每看到都会有小惊喜的感觉。</p><p>在 iPhone 相簿里，「回忆」和「精选照片」也很棒，会按照地点、时间或人物来为我整理照片，还会直接生成带有配乐的小视频，让分享变得很简单。</p><p>最重要的是，照片所承载的不仅仅是一幅画面。在照片详情页，你可以一目了然地看到照片拍摄的精确时间和地点，而这一切都是在按下快门的一瞬间发生的。如此种种，不都是日记吗？</p><hr><p>当然，即使有了如上种种，我的倾诉欲（分享欲、表达欲）依然还有一部分：零零碎碎的小思绪。这些可能是吐槽别人，可能是暗恋猜想，还可能是一些不容易被接受的想法……</p><p>「社死现场：被熟人发现了我的微博」是一个之前热度很高的话题，正是因为很多人会把自己不愿告诉别人但又需要有宣泄口的小心思记录在微博。一旦被熟人发现，必然像是被「扒了内裤」一样羞耻和尴尬。在少数派，甚至有极客会自建一个微博，专门用来记录自己的碎碎念。</p><p>我自己使用 flomo 来承载这部分作用。一方面，flomo 的设计十分接近微博或朋友圈，无论是界面还是云同步，用起来都很有感觉；另一方面，flomo 免费用户的纯文字存储无限量，让人不必担心资费的问题。</p><p>你不一定要选择 flomo。我曾经跟我的朋友推荐过，但是她依然选择微博，因为她仍然希望自己发的内容能被陌生人看到或有一定的公开曝光。如果你也如此，那任何你喜爱的社交平台都可以成为你的「日记本」。</p><h2 id="让自己重新爱上日记"><a href="#让自己重新爱上日记" class="headerlink" title="让自己重新爱上日记"></a>让自己重新爱上日记</h2><p>将传统的流水账日记打破，分成多种不同的日记形式。不再一昧追求统一，而是根据自己的需求选择不同的日记，让记录发挥出更多元、更深入、更长久的效果。</p><p>我想，这样子的话，或许能让我自己、也能让你重新爱上记录生活吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;你还记得初高中那段时间的小心思吗？&lt;/p&gt;
&lt;p&gt;那些对喜欢的人小心翼翼的关注，害怕被同学孤立或讨厌的忧心，害怕自己进步得太慢的焦虑……所有的小心思都在身体里翻涌，在夜色下辗转，在阳光下焦灼。作为学生，我们大多会选择一种成本最低的方式，将这些心绪排解——写日记。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="Life Thoughts" scheme="http://deskside.github.io/categories/life-thoughts/"/>
    
    
    <category term="人生" scheme="http://deskside.github.io/tags/%E4%BA%BA%E7%94%9F/"/>
    
    <category term="焦虑" scheme="http://deskside.github.io/tags/%E7%84%A6%E8%99%91/"/>
    
    <category term="写作" scheme="http://deskside.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>我和好朋友的聊天：童年的伤痛像一根掰不断的倒刺</title>
    <link href="http://deskside.github.io/talk-with-bf-about-family/"/>
    <id>http://deskside.github.io/talk-with-bf-about-family/</id>
    <published>2022-06-24T16:00:00.000Z</published>
    <updated>2023-09-17T08:45:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>我总是自称「一个运气不怎么样的人」，每次抽奖基本都与奖品无缘，从小到大也没觉得经历过什么特别的好运爆棚的时刻，甚至玩游戏抽卡也平平无奇。</p><p>但只有一个方面，让我怀疑我是不是将运气都保留到这个地方了，那就是「结交好友」。</p><p>社会鱼龙混杂，谁都有遇人不淑的时候，因此我在此特指「好朋友」。我在人生的每个大阶段，似乎都会遇上一两个让我觉得很棒的好朋友。</p><p>我在大学最要好的朋友，因主持晚会而相识，因经常寻觅好吃餐厅而相知，因经历和三观极其相近而相熟。这几天我回武汉，也被她拽着吃了好几顿大餐。</p><p>前几天和她吃的一顿饭上，我们触及了几个非常核心的话题，我想与大家分享。</p><h3 id="被妈妈刺痛的一句话"><a href="#被妈妈刺痛的一句话" class="headerlink" title="被妈妈刺痛的一句话"></a>被妈妈刺痛的一句话</h3><p>我和她都是离异家庭的孩子，但我们的所经历的境况不同。我相信，家家都有难念的经。但是，相比父母同心、但偶有争吵的、较为和谐的家庭，父母不同心、不和谐或父母（某一方）存在巨大问题的家庭，孩子会受到极大的创伤。</p><p>我和好朋友都一致同意，如果简单粗暴地将人分为「来自较和谐的家庭」和「来自较不和谐的家庭」两种，两者将有明显的差别。前者总体上会呈现更乐观、积极、自信和钝感的状态，后者则恰恰相反，总体上呈现更悲观、消极、不自信和敏感的状态。</p><p>我和好朋友聊到了一件事，产生了极大的共鸣——</p><p><strong>如何看待「孩子在原生家庭中所遭遇的事情，对现在的影响」？</strong></p><p>作为童年经历过极大家庭不和谐的孩子，无论我们长大后过得如何，我们都不认为我们的童年家庭经历是件好事（毕竟成长过程中，真的很多痛苦和困惑），或是一件纯粹的坏事（从结果而言，我们会比同龄人更成熟）。那么，我们如何理解和评价这件事？</p><p>我只能说：这一切都是客观发生了的，既然发生了，那就不再去评价了。但是，我们的妈妈都在某次聊天触及相关话题的时候，说过一句话——</p><p>「你难道不觉得这是一件好事吗？」</p><p>这句话无论从理性还是感性都刺痛了我们。理性上，这显然是因果倒置，以果判因。最终结果确实是我们被逼着长大和成熟，但这是结果，不是最初让我们遭遇这一切的原因。</p><p>感性上，这句话抹杀了我们成长过程中所有的痛苦感受和负面情绪。退一万步说，如果这是好事，那我们经历的痛苦和烦恼是不是就被一笔勾销了呢？</p><p>B 站 up 主 vivi 可爱多的新视频《<a href="https://www.bilibili.com/video/BV1hN4y137pK">毕业13年后，当年的问题还是问题吗</a>》中，她和朋友都一致认为，当年的磨难不值得感谢，她们更愿意用「既然我都经历了磨难，那我一定也要从你这里抢回一些东西，比如勇气、自信、成熟」来思考当年事情的影响。我也同样认可。</p><p>我的好朋友对此现象提出了一个有信服力的解释。我们的母亲们对于这件事是有愧疚或感到不安的，她们希望在成年的我们身上找到一些慰藉或安慰，这无可厚非，我们也常常告诉母亲们小时候的事已经过去了。但却选择了一个错误的方式，反而继续让我们受到了伤害。</p><h3 id="理解，甚至只需一句话"><a href="#理解，甚至只需一句话" class="headerlink" title="理解，甚至只需一句话"></a>理解，甚至只需一句话</h3><p>人其实是一种强烈的渴望「被理解」的生物，但是人的大脑结构和语言能力似乎已经决定了人是多疑的、费解的、反复无常的。</p><p>大部分人都有很强烈的倾诉欲，只不过表现形式不尽相同。有些人选择与朋友聊天，有有些人选择写作，有些人选择唱歌、拍摄等创作活动……每一种倾诉都暗含着渴望被理解的冲动。</p><p>英国玄学派诗人约翰·多恩写下了《没有人是一座孤岛》，诗里暗含的是全人类命运与共的真知灼见。但我认为这依然不妨碍每一个人类个体的高度孤独性，换言之，如果继续拿孤岛做例子，那么或许「所有人都各是一座孤岛，只不过岛上装了扩音器，还有WiFi」。</p><p>一部分因为天生性格，一部分因为原生家庭等因素，我虽然总体是一个比较外向的人，但很多我认为重要的事情依然会埋藏在心底里自己消化，无论是对象、挚友还是亲人都未曾告知。</p><p>因此，如果我想要将某个在自己脑海里萦绕盘桓许久的事情，试着第一次与他人分享，即使那个人是我重要的安全感来源（比如对象、好朋友），我也依然需要做很久的思想工作。</p><p>这也是为什么我的好朋友在听我讲了很多事情之后，第一句话「我想，你要说出这些内容肯定很不容易」的时候，我突然间就感到了释怀。无论对方有没有真正对我表达的话题产生共鸣，对方都已经理解了我掏心言说的艰难。仅此一点，我就已经感到欣喜和感动了。</p><h3 id="怎么安慰别人"><a href="#怎么安慰别人" class="headerlink" title="怎么安慰别人"></a>怎么安慰别人</h3><p>写到这里，让我想起了「怎么安慰别人」这个议题。我不能说是一个很会安慰人的人，但有一些思考可供参考。</p><p>（以下的他均无性别特指，可指代任何性别取向）</p><p>陪伴和倾听。这里是指非常单纯的陪伴和倾听。既不要费尽口舌安慰或试图逗笑他人，也不要对其经历和遭遇的人做出任何评价。最好能够当面坐在一起，让对方知道有人在听他讲话、在陪他就好了。通常而言，这已是莫大的安慰。</p><p>如果对方希望你能发出共鸣，最简单也最不会刺痛对方的方式，其实是复述对方的话。一方面，复述是一种双重确认，你在向对方确认你是否正确理解了发生的事情、他的烦恼和困扰。另一方面，复述本身其实也很有力量，很多时候，光是听别人试着理解自己的烦忧，烦忧便已消散许多。</p><p>如果话题还在深入，你可以试着去思考对方为什么会有这样的反应，为什么会遭遇这样的事情，为什么会在意某人说的话、某人做的事等。这背后往往潜藏了一个人内心深处的恐惧。</p><p>最后，尽量鼓励对方思考以后如何避免类似的事情发生，但尽量不要将你的想法强加给他人。比如，你可以鼓励朋友去心理咨询，但强拉着他去心理咨询并不一定会有好结果。</p><p>虽然我写了四点内容，但按照我的经验，实际上，大部分的安慰对话都会在第一步收尾。</p><h3 id="乐观与悲观的半杯水"><a href="#乐观与悲观的半杯水" class="headerlink" title="乐观与悲观的半杯水"></a>乐观与悲观的半杯水</h3><p>有一个很出名的心理学实验「半杯水」。桌子上摆着半杯水，你是认为「这个杯子一半满」还是「这个杯子一半空」，代表了你是一个乐观还是悲观的人。</p><p>好朋友是区分情况的乐观与悲观，比如，她对于「友情」乐观，对于「爱情」悲观……</p><p>我从此衍生了一个自己的理论「加减分」。我们对于绝大多数新接触的人、事、物都会保有某种期待，但具体是「默认为满分100分，随着深入了解再逐渐减分」还是「默认为0分，随着深入了解再逐渐加分」，代表着我们对其是乐观还是悲观预期。</p><p>我对「人」总是抱有乐观预期，我默认每个人都是好人，因为每个人在我这里一开始都是100分，如果发生了不愉快，我才会逐步扣分。然而，与之相反，我总是对「我的未来境况」抱有悲观预期，我总是默认自己会过得不好，或者不如别人好，或者即使努力了也不会有好结果。</p><p>「事中享受程度」也可以说明一些事情。我属于典型的杞人忧天人格，我常常无法尽情享受当下。基本上，当我感到很开心的时候，几分钟后我就会开始意识到「这并不能长久」。</p><p>比如前两天，我躺在学校操场草坪上，枕着对象的大腿看天空，云朵随着夜空中的风跑得飞快，一切都很浪漫和美好。但不消一会儿，我大脑里思考的事情就从「这样真好」变成了「等异地恋了就不能这样了」「过几天我就要走了」等，我的心也随着思考沉下去了，悲伤等消极情绪也开始翻涌。</p><p>如果你也是类似的性格，或许一个小方法是开始识别和观察情绪。只有当我们意识到自己所感受的情绪时，我们才有可能慢慢改变它们。</p><p>相对应的，另一个能反映性格的行为是「事后记忆的留存」。我新认识的朋友妄为是典型的乐天派，他说他对恋爱中发生过的事情，大都只记住了快乐的部分，争吵、不愉快基本上都淡化了。实话实说，我十分羡慕。</p><p>值得警惕的是，如果自己是偏悲观的性格，就更不要用「悲观性格的人真的好差劲」这样的想法来继续伤害自己、陷入循环论证。偏悲观的性格也有其好处，其更能未雨绸缪。</p><p>因此，很难说乐观一定优于悲观性格。但是，能全情投入当下，总是好过时常惶恐不安，不是吗？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我总是自称「一个运气不怎么样的人」，每次抽奖基本都与奖品无缘，从小到大也没觉得经历过什么特别的好运爆棚的时刻，甚至玩游戏抽卡也平平无奇。&lt;/p&gt;
&lt;p&gt;但只有一个方面，让我怀疑我是不是将运气都保留到这个地方了，那就是「结交好友」。&lt;/p&gt;
&lt;p&gt;社会鱼龙混杂，谁都有遇人不淑</summary>
      
    
    
    
    <category term="Life Thoughts" scheme="http://deskside.github.io/categories/life-thoughts/"/>
    
    
    <category term="人生" scheme="http://deskside.github.io/tags/%E4%BA%BA%E7%94%9F/"/>
    
    <category term="心理学" scheme="http://deskside.github.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
    <category term="父母" scheme="http://deskside.github.io/tags/%E7%88%B6%E6%AF%8D/"/>
    
  </entry>
  
</feed>
